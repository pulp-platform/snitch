From 791cc2b3026f87017c6055f6ee1f1944cffea2e2 Mon Sep 17 00:00:00 2001
From: Florian Zaruba <zarubaf@iis.ee.ethz.ch>
Date: Wed, 6 Jan 2021 19:59:22 +0100
Subject: [PATCH] vendor: VCS patches

---
 test/fixture_axi_dma_backend.sv | 67 ++++++++++++++++-----------------
 test/tb_axi_atop_filter.sv      |  2 -
 test/tb_axi_cdc.sv              |  3 --
 test/tb_axi_dma_backend.sv      | 15 ++++----
 test/tb_axi_dw_downsizer.sv     |  3 --
 test/tb_axi_dw_upsizer.sv       |  3 --
 test/tb_axi_modify_address.sv   |  3 --
 test/tb_axi_xbar.sv             |  6 ++-
 8 files changed, 44 insertions(+), 58 deletions(-)

diff --git a/test/fixture_axi_dma_backend.sv b/test/fixture_axi_dma_backend.sv
index ac67cb2..9f3269e 100644
--- a/test/fixture_axi_dma_backend.sv
+++ b/test/fixture_axi_dma_backend.sv
@@ -13,7 +13,6 @@
 // the fixture instantiates the DMA backend, a golden model of the backend , and tasks controlling
 // both.
 
-`timescale 1ns/1ns
 module fixture_axi_dma_backend();
 
     // `include "../axi/include/axi/assign.svh"
@@ -23,7 +22,7 @@ module fixture_axi_dma_backend();
 
     //--------------------------------------
     // Parameters
-    //-------------------------------------- 
+    //--------------------------------------
     localparam TA          = 0.2ns;  // must be nonzero to avoid Snitch load fifo double pop glitch
     localparam TT          = 0.8ns;
     localparam HalfPeriod  = 50ns;
@@ -63,16 +62,16 @@ module fixture_axi_dma_backend();
     `AXI_TYPEDEF_AW_CHAN_T(aw_chan_dma_t, addr_t, axi_id_t, user_t)
     `AXI_TYPEDEF_W_CHAN_T(w_chan_t, data_t, strb_t, user_t)
     `AXI_TYPEDEF_B_CHAN_T(b_chan_dma_t, axi_id_t, user_t)
-    
+
     `AXI_TYPEDEF_AR_CHAN_T(ar_chan_dma_t, addr_t, axi_id_t, user_t)
     `AXI_TYPEDEF_R_CHAN_T(r_chan_dma_t, data_t, axi_id_t, user_t)
-    
+
     `AXI_TYPEDEF_REQ_T(dma_req_t, aw_chan_dma_t, w_chan_t, ar_chan_dma_t)
     `AXI_TYPEDEF_RESP_T(dma_resp_t, b_chan_dma_t, r_chan_dma_t)
-    
+
     //--------------------------------------
     // Clock and Reset
-    //-------------------------------------- 
+    //--------------------------------------
     logic clk;
     initial begin
         forever begin
@@ -97,40 +96,40 @@ module fixture_axi_dma_backend();
 
     //--------------------------------------
     // DUT Axi busses
-    //-------------------------------------- 
+    //--------------------------------------
     dma_req_t  axi_dma_req;
     dma_resp_t axi_dma_res;
-    
+
     AXI_BUS_DV #(
         .AXI_ADDR_WIDTH  ( AddrWidth   ),
         .AXI_DATA_WIDTH  ( DataWidth   ),
         .AXI_ID_WIDTH    ( IdWidth     ),
         .AXI_USER_WIDTH  ( 1           )
     ) dma (clk);
-    
+
     AXI_BUS #(
         .AXI_ADDR_WIDTH  ( AddrWidth   ),
         .AXI_DATA_WIDTH  ( DataWidth   ),
         .AXI_ID_WIDTH    ( IdWidth     ),
         .AXI_USER_WIDTH  ( 1           )
     ) mem ();
-    
+
     `AXI_ASSIGN (dma, mem)
     `AXI_ASSIGN_FROM_REQ(mem, axi_dma_req)
     `AXI_ASSIGN_TO_RESP(axi_dma_res, mem)
 
     //--------------------------------------
     // DUT AXI Memory System
-    //-------------------------------------- 
+    //--------------------------------------
     // lfsr
     logic [784:0] lfsr_dut_q, lfsr_dut_d;
 
     // transaction id
     logic [  7:0] transaction_id = 0;
-    
+
     // Memory
     block_t dma_memory [bit [64-$clog2($bits(block_t))-1:0]];
-    
+
     // Handle the data output from dma. Model of the memory acting as AXI slave.
     typedef axi_test::axi_driver #(.AW(AddrWidth), .DW(DataWidth), .IW(IdWidth), .UW(1), .TA(0.1*2*HalfPeriod), .TT(0.9*2*HalfPeriod)) driver_dma_t;
     driver_dma_t driver_dma = new(dma);
@@ -138,22 +137,22 @@ module fixture_axi_dma_backend();
         automatic driver_dma_t::ax_beat_t aw_dma_queue[$], ar_dma_queue[$];
         automatic driver_dma_t::b_beat_t b_dma_queue[$];
         automatic string sb = "";
-        
+
         event ar_dma_received, aw_dma_received, b_dma_ready;
         event lfsr_dut_read;
         event lfsr_dut_read_completed;
-        
+
         driver_dma.reset_slave();
         @(posedge rst_n);
         $display("AXI reset done");
-        
+
         fork
             // AW
             forever begin
                 automatic driver_dma_t::ax_beat_t dma_tx;
                 driver_dma.recv_aw(dma_tx);
 `ifdef MEM_DEBUG
-                $display("%d: AW - id: %4d - addr: %d - len: %4d - size: %4d - burst: %b", 
+                $display("%d: AW - id: %4d - addr: %d - len: %4d - size: %4d - burst: %b",
                              $time(), dma_tx.ax_id, dma_tx.ax_addr, dma_tx.ax_len, dma_tx.ax_size, dma_tx.ax_burst );
 `endif
                 aw_dma_queue.push_back(dma_tx);
@@ -164,7 +163,7 @@ module fixture_axi_dma_backend();
                 automatic driver_dma_t::ax_beat_t dma_tx;
                 driver_dma.recv_ar(dma_tx);
 `ifdef MEM_DEBUG
-                $display("%d: AR - id: %4d - addr: %d - len: %4d - size: %4d - burst: %b", 
+                $display("%d: AR - id: %4d - addr: %d - len: %4d - size: %4d - burst: %b",
                             $time(), dma_tx.ax_id, dma_tx.ax_addr, dma_tx.ax_len, dma_tx.ax_size, dma_tx.ax_burst );
 `endif
                 ar_dma_queue.push_back(dma_tx);
@@ -189,12 +188,12 @@ module fixture_axi_dma_backend();
                         lfsr_dut_d[692] = lfsr_dut_q[0] ^ lfsr_dut_q[693];
                         lfsr_dut_q      = lfsr_dut_d;
                     end
-                end 
+                end
                 dma_tx.r_data = dma_memory[word].data;
                 dma_tx.r_resp = axi_pkg::RESP_OKAY;
                 dma_tx.r_last = (dma_ax.ax_len == 0);
 `ifdef MEM_DEBUG
-                $display("%d:  R - id: %4d - data: %x - resp: %x                - last: %b (0x%x)", 
+                $display("%d:  R - id: %4d - data: %x - resp: %x                - last: %b (0x%x)",
                         $time(), dma_tx.r_id, dma_tx.r_data, dma_tx.r_resp, dma_tx.r_last, word << 6);
 `endif
                 dma_ax.ax_addr >>= dma_ax.ax_size;
@@ -223,7 +222,7 @@ module fixture_axi_dma_backend();
                     end
                 end
 `ifdef MEM_DEBUG
-                $display("%d:  W -            data: %x - strb: %x - last: %b (0x%x)", 
+                $display("%d:  W -            data: %x - strb: %x - last: %b (0x%x)",
                        $time(), dma_tx.w_data, dma_tx.w_strb, dma_tx.w_last, word << 6);
 `endif
                 dma_ax.ax_addr >>= dma_ax.ax_size;
@@ -251,7 +250,7 @@ module fixture_axi_dma_backend();
 
     //--------------------------------------
     // DMA instantiation
-    //-------------------------------------- 
+    //--------------------------------------
     burst_req_t burst_req;
     logic burst_req_valid;
     logic burst_req_ready;
@@ -284,7 +283,7 @@ module fixture_axi_dma_backend();
 
     //--------------------------------------
     // DMA DUT tasks
-    //-------------------------------------- 
+    //--------------------------------------
     task oned_dut_launch (
         input logic [   IdWidth-1:0] transf_id_i,
         input logic [ AddrWidth-1:0] src_addr_i,  dst_addr_i,  num_bytes_i,
@@ -336,7 +335,7 @@ module fixture_axi_dma_backend();
 
     //--------------------------------------
     // Osmium Model
-    //-------------------------------------- 
+    //--------------------------------------
     // Memory
     block_t osmium_memory [bit [64-$clog2($bits(block_t))-1:0]];
     // lfsr
@@ -377,8 +376,8 @@ module fixture_axi_dma_backend();
             // do the write
             osmium_memory[write_word].bytes[write_offset] = osmium_memory[read_word].bytes[read_offset];
             // $display("W: %d - %d    R: %d - %d", write_word, write_offset, read_word, read_offset);
-        end 
-        
+        end
+
     endtask
 
     task clear_osmium_memory ();
@@ -391,14 +390,14 @@ module fixture_axi_dma_backend();
 
     //--------------------------------------
     // Compare Memory content
-    //-------------------------------------- 
+    //--------------------------------------
     task compare_memories ();
 
-        // go through osmium memory and compare contents 
+        // go through osmium memory and compare contents
         foreach(osmium_memory[i]) begin
             if (osmium_memory[i] !== dma_memory[i]) $fatal("Memory mismatch @ %x\nexpect: %x\ngot   :%x\n", i << 6, osmium_memory[i], dma_memory[i]);
         end
-        // go through dma memory and compare contents 
+        // go through dma memory and compare contents
         foreach(dma_memory[i]) begin
             if (osmium_memory[i] !== dma_memory[i]) $fatal("Memory mismatch @ %x\nexpect: %x\ngot   :%x\n", i << 6, osmium_memory[i], dma_memory[i]);
         end
@@ -410,7 +409,7 @@ module fixture_axi_dma_backend();
 
     //--------------------------------------
     // Master tasks
-    //-------------------------------------- 
+    //--------------------------------------
 
     task clear_memory ();
         clear_dut_memory();
@@ -428,15 +427,15 @@ module fixture_axi_dma_backend();
         input logic                  decouple_rw_i,
         input logic                  deburst_i,
         input logic                  wait_for_completion_i
-    );  
+    );
         // keep a log file
         int my_file;
         my_file = $fopen("dma_transfers.txt", "a+");
         $write("ID: %d  SRC: 0x%x  DST: 0x%x  LEN: %d  DECOUPLE: %1b DEBURST: %1b ", transf_id_i, src_addr_i, dst_addr_i, num_bytes_i, decouple_rw_i, deburst_i );
         $fwrite (my_file, "ID: %d  SRC: 0x%x  DST: 0x%x  LEN: %d  DECOUPLE: %1b DEBURST: %1b\n", transf_id_i, src_addr_i, dst_addr_i, num_bytes_i, decouple_rw_i, deburst_i );
         $fclose(my_file);
-        
-        // cache and burst is ignored 
+
+        // cache and burst is ignored
         oned_dut_launch(transf_id_i, src_addr_i, dst_addr_i, num_bytes_i, 2'b01, 2'b01, 4'h0, 4'h0, decouple_rw_i, deburst_i);
         // wait if requested
         if (wait_for_completion_i)
@@ -481,5 +480,5 @@ module fixture_axi_dma_backend();
         oned_launch(transf_id, src_addr, dst_addr, num_bytes, decouple_rw, deburst, wait_for_completion);
 
     endtask
-    
+
 endmodule : fixture_axi_dma_backend
diff --git a/test/tb_axi_atop_filter.sv b/test/tb_axi_atop_filter.sv
index 3d68808..caaa51c 100644
--- a/test/tb_axi_atop_filter.sv
+++ b/test/tb_axi_atop_filter.sv
@@ -45,8 +45,6 @@ module tb_axi_atop_filter #(
   parameter int unsigned N_TXNS = 1000
 );
 
-  timeunit 1ns;
-  timeprecision 10ps;
 
   localparam int unsigned AXI_STRB_WIDTH  = AXI_DATA_WIDTH / 8;
   localparam int unsigned NUM_AXI_IDS     = 2**AXI_ID_WIDTH;
diff --git a/test/tb_axi_cdc.sv b/test/tb_axi_cdc.sv
index 418fb74..2b439c7 100644
--- a/test/tb_axi_cdc.sv
+++ b/test/tb_axi_cdc.sv
@@ -35,9 +35,6 @@ module tb_axi_cdc #(
   parameter int unsigned N_TXNS = 1000
 );
 
-  timeunit 1ns;
-  timeprecision 10ps;
-
   localparam int unsigned N_RD_TXNS = N_TXNS / 2;
   localparam int unsigned N_WR_TXNS = N_TXNS / 2;
 
diff --git a/test/tb_axi_dma_backend.sv b/test/tb_axi_dma_backend.sv
index 728483c..a4f8018 100644
--- a/test/tb_axi_dma_backend.sv
+++ b/test/tb_axi_dma_backend.sv
@@ -11,7 +11,6 @@
 
 // top level of the simulation for the AXI DMA backend
 
-`timescale 1ns/1ns
 module tb_axi_dma_backend;
 
     fixture_axi_dma_backend fix ();
@@ -20,7 +19,7 @@ module tb_axi_dma_backend;
         fix.reset();
         fix.clear_memory();
         fix.reset_lfsr();
-        
+
         // ultra short transfers
         for (int i = 0; i < 20000; i = i + 1) begin
             fix.oned_random_launch(4, 0);
@@ -28,7 +27,7 @@ module tb_axi_dma_backend;
         end
         fix.oned_random_launch(4, 1);
         fix.compare_memories();
-        
+
         // medium short transfers
         for (int i = 0; i < 20000; i = i + 1) begin
             fix.oned_random_launch(10, 0);
@@ -36,7 +35,7 @@ module tb_axi_dma_backend;
         end
         fix.oned_random_launch(10, 1);
         fix.compare_memories();
-        
+
         // // short transfers
         for (int i = 0; i < 25000; i = i + 1) begin
             fix.oned_random_launch(100, 0);
@@ -44,7 +43,7 @@ module tb_axi_dma_backend;
         end
         fix.oned_random_launch(100, 1);
         fix.compare_memories();
-        
+
          // // medium transfers
          for (int i = 0; i < 1000; i = i + 1) begin
              fix.oned_random_launch(1000, 0);
@@ -52,7 +51,7 @@ module tb_axi_dma_backend;
          end
          fix.oned_random_launch(1000, 1);
          fix.compare_memories();
-        
+
         // long transfers
         for (int i = 0; i < 250; i = i + 1) begin
             fix.oned_random_launch(10000, 0);
@@ -60,7 +59,7 @@ module tb_axi_dma_backend;
         end
         fix.oned_random_launch(10000, 1);
         fix.compare_memories();
-        
+
         // ultra long transfers
         for (int i = 0; i < 100; i = i + 1) begin
             fix.oned_random_launch(65000, 0);
@@ -68,7 +67,7 @@ module tb_axi_dma_backend;
         end
         fix.oned_random_launch(65000, 1);
         fix.compare_memories();
-        
+
         $display("\nDone :D (in %18.9f seconds", $time() / 1000000.0);
         $display("SUCCESS");
         $stop();
diff --git a/test/tb_axi_dw_downsizer.sv b/test/tb_axi_dw_downsizer.sv
index 29e228a..87e63ab 100644
--- a/test/tb_axi_dw_downsizer.sv
+++ b/test/tb_axi_dw_downsizer.sv
@@ -20,9 +20,6 @@
 
 module tb_axi_dw_downsizer;
 
-  timeunit      1ns;
-  timeprecision 10ps;
-
   parameter AW   = 64;
   parameter IW   = 4;
   parameter DW   = 32;
diff --git a/test/tb_axi_dw_upsizer.sv b/test/tb_axi_dw_upsizer.sv
index bf407af..1af7ee0 100644
--- a/test/tb_axi_dw_upsizer.sv
+++ b/test/tb_axi_dw_upsizer.sv
@@ -20,9 +20,6 @@
 
 module tb_axi_dw_upsizer;
 
-  timeunit      1ns;
-  timeprecision 10ps;
-
   parameter AW   = 64;
   parameter IW   = 4;
   parameter DW   = 32;
diff --git a/test/tb_axi_modify_address.sv b/test/tb_axi_modify_address.sv
index 37e4c4b..1542971 100644
--- a/test/tb_axi_modify_address.sv
+++ b/test/tb_axi_modify_address.sv
@@ -32,9 +32,6 @@ module tb_axi_modify_address #(
   parameter int unsigned N_TXNS = 1000
 );
 
-  timeunit 1ns;
-  timeprecision 10ps;
-
   localparam int unsigned N_RD_TXNS = N_TXNS / 2;
   localparam int unsigned N_WR_TXNS = N_TXNS / 2;
 
diff --git a/test/tb_axi_xbar.sv b/test/tb_axi_xbar.sv
index 2c4a78f..1aa6d52 100644
--- a/test/tb_axi_xbar.sv
+++ b/test/tb_axi_xbar.sv
@@ -186,9 +186,10 @@ module tb_axi_xbar;
   // AXI Rand Masters and Slaves
   // -------------------------------
   // Masters control simulation run time
+  rand_axi_master_t rand_axi_master [NoMasters];
   for (genvar i = 0; i < NoMasters; i++) begin : gen_rand_master
     initial begin
-      static rand_axi_master_t rand_axi_master = new ( master_dv[i] );
+      rand_axi_master[i] = new ( master_dv[i] );
       end_of_sim[i] <= 1'b0;
       rand_axi_master.add_memory_region(AddrMap[0].start_addr,
                                       AddrMap[xbar_cfg.NoAddrRules-1].end_addr,
@@ -200,9 +201,10 @@ module tb_axi_xbar;
     end
   end
 
+  rand_axi_slave_t rand_axi_slave [NoSlaves];
   for (genvar i = 0; i < NoSlaves; i++) begin : gen_rand_slave
     initial begin
-      static rand_axi_slave_t rand_axi_slave = new( slave_dv[i] );
+      rand_axi_slave[i] = new( slave_dv[i] );
       rand_axi_slave.reset();
       @(posedge rst_n);
       rand_axi_slave.run();
-- 
2.25.1.377.g2d2118b814

