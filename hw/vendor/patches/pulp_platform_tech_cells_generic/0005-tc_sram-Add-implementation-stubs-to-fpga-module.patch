From 44b4900b2dccbedccfd0db7d100b25963aec45fe Mon Sep 17 00:00:00 2001
From: Paul Scheffler <paulsc@iis.ee.ethz.ch>
Date: Mon, 25 Oct 2021 23:15:52 +0200
Subject: [PATCH] tc_sram: Add implementation stubs to fpga module

---
 src/fpga/tc_sram_xilinx.sv | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/src/fpga/tc_sram_xilinx.sv b/src/fpga/tc_sram_xilinx.sv
index c706802..48aa784 100644
--- a/src/fpga/tc_sram_xilinx.sv
+++ b/src/fpga/tc_sram_xilinx.sv
@@ -24,6 +24,10 @@ module tc_sram #(
   parameter int unsigned Latency      = 32'd1,    // Latency when the read data is available
   parameter              SimInit      = "zeros",  // Simulation initialization, fixed to zero here!
   parameter bit          PrintSimCfg  = 1'b0,     // Print configuration
+  parameter              ImplKey      = "none",   // Reference to specific implementation
+  parameter type         impl_in_t    = logic,    // Type for implementation inputs
+  parameter type         impl_out_t   = logic,    // Type for implementation outputs
+  parameter impl_out_t   ImplOutSim   = 'X,       // Implementation output in simulation
   // DEPENDENT PARAMETERS, DO NOT OVERWRITE!
   parameter int unsigned AddrWidth = (NumWords > 32'd1) ? $clog2(NumWords) : 32'd1,
   parameter int unsigned BeWidth   = (DataWidth + ByteWidth - 32'd1) / ByteWidth, // ceil_div
@@ -33,6 +37,11 @@ module tc_sram #(
 ) (
   input  logic                clk_i,      // Clock
   input  logic                rst_ni,     // Asynchronous reset active low
+`ifndef PULP_TC_SRAM_NOIMPL
+  // Implementation-related IO
+  input  impl_in_t             impl_i,
+  output impl_out_t            impl_o,
+`endif
   // input ports
   input  logic  [NumPorts-1:0] req_i,      // request
   input  logic  [NumPorts-1:0] we_i,       // write enable
@@ -43,6 +52,11 @@ module tc_sram #(
   output data_t [NumPorts-1:0] rdata_o     // read data
 );
 
+`ifndef PULP_TC_SRAM_NOIMPL
+  // constant implementation output in behavioral simulation
+  assign impl_o = ImplOutSim;
+`endif
+
   localparam int unsigned DataWidthAligned = ByteWidth * BeWidth;
   localparam int unsigned Size             = NumWords * DataWidthAligned;
 
-- 
2.16.5

