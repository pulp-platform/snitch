// Copyright 2020 ETH Zurich and University of Bologna.
// Solderpad Hardware License, Version 0.51, see LICENSE for details.
// SPDX-License-Identifier: SHL-0.51

// Author: Florian Zaruba <zarubaf@iis.ee.ethz.ch>
// Author: Fabian Schuiki <fschuiki@iis.ee.ethz.ch>
//
// AUTOMATICALLY GENERATED by genoccamy.py; edit the script instead.



`include "common_cells/registers.svh"

module occamy_soc
  import occamy_pkg::*;
(
    input logic clk_i,
    input logic rst_ni,
    input logic test_mode_i,

    /// HBM2e Ports
    output axi_a48_d512_i8_u0_req_t  hbm_0_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_0_rsp_i,
    output axi_a48_d512_i8_u0_req_t  hbm_1_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_1_rsp_i,
    output axi_a48_d512_i8_u0_req_t  hbm_2_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_2_rsp_i,
    output axi_a48_d512_i8_u0_req_t  hbm_3_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_3_rsp_i,
    output axi_a48_d512_i8_u0_req_t  hbm_4_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_4_rsp_i,
    output axi_a48_d512_i8_u0_req_t  hbm_5_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_5_rsp_i,
    output axi_a48_d512_i8_u0_req_t  hbm_6_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_6_rsp_i,
    output axi_a48_d512_i8_u0_req_t  hbm_7_req_o,
    input  axi_a48_d512_i8_u0_resp_t hbm_7_rsp_i,

    /// HBI Ports
    input  axi_a48_d512_i4_u0_req_t  hbi_wide_req_i,
    output axi_a48_d512_i4_u0_resp_t hbi_wide_rsp_o,
    output axi_a48_d512_i6_u0_req_t  hbi_wide_req_o,
    input  axi_a48_d512_i6_u0_resp_t hbi_wide_rsp_i,

    input  axi_a48_d64_i4_u0_req_t  hbi_narrow_req_i,
    output axi_a48_d64_i4_u0_resp_t hbi_narrow_rsp_o,
    output axi_a48_d64_i8_u0_req_t  hbi_narrow_req_o,
    input  axi_a48_d64_i8_u0_resp_t hbi_narrow_rsp_i,

    /// PCIe Ports
    output axi_a48_d64_i8_u0_req_t  pcie_axi_req_o,
    input  axi_a48_d64_i8_u0_resp_t pcie_axi_rsp_i,

    input  axi_a48_d64_i4_u0_req_t  pcie_axi_req_i,
    output axi_a48_d64_i4_u0_resp_t pcie_axi_rsp_o,


    // Peripheral Ports (to AXI-lite Xbar)
    output axi_a48_d64_i8_u0_req_t  periph_axi_lite_req_o,
    input  axi_a48_d64_i8_u0_resp_t periph_axi_lite_rsp_i,

    input  axi_a48_d64_i4_u0_req_t  periph_axi_lite_req_i,
    output axi_a48_d64_i4_u0_resp_t periph_axi_lite_rsp_o,

    // Peripheral Ports (to Regbus Xbar)
    output axi_a48_d64_i8_u0_req_t  periph_regbus_req_o,
    input  axi_a48_d64_i8_u0_resp_t periph_regbus_rsp_i,

    // SoC control register IO
    // FIXME: reg2hw and hw2reg connections are currently unused; this may change, however.
    input occamy_soc_reg_pkg::occamy_soc_reg2hw_t soc_ctrl_out_i,
    output occamy_soc_reg_pkg::occamy_soc_hw2reg_t soc_ctrl_in_o,
    output logic [1:0] spm_rerror_o,

    // Interrupts and debug requests
    input logic [288:0] mtip_i,
    input logic [288:0] msip_i,
    input logic [  1:0] eip_i,
    input logic [  0:0] debug_req_i,

    /// SRAM configuration
    input sram_cfgs_t sram_cfgs_i
);

  ///////////////
  // Crossbars //
  ///////////////

  addr_t [7:0] s1_quadrant_base_addr, s1_quadrant_cfg_base_addr;
  assign s1_quadrant_base_addr[0] = ClusterBaseOffset + 0 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[0] = S1QuadrantCfgBaseOffset + 0 * S1QuadrantCfgAddressSpace;
  assign s1_quadrant_base_addr[1] = ClusterBaseOffset + 1 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[1] = S1QuadrantCfgBaseOffset + 1 * S1QuadrantCfgAddressSpace;
  assign s1_quadrant_base_addr[2] = ClusterBaseOffset + 2 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[2] = S1QuadrantCfgBaseOffset + 2 * S1QuadrantCfgAddressSpace;
  assign s1_quadrant_base_addr[3] = ClusterBaseOffset + 3 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[3] = S1QuadrantCfgBaseOffset + 3 * S1QuadrantCfgAddressSpace;
  assign s1_quadrant_base_addr[4] = ClusterBaseOffset + 4 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[4] = S1QuadrantCfgBaseOffset + 4 * S1QuadrantCfgAddressSpace;
  assign s1_quadrant_base_addr[5] = ClusterBaseOffset + 5 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[5] = S1QuadrantCfgBaseOffset + 5 * S1QuadrantCfgAddressSpace;
  assign s1_quadrant_base_addr[6] = ClusterBaseOffset + 6 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[6] = S1QuadrantCfgBaseOffset + 6 * S1QuadrantCfgAddressSpace;
  assign s1_quadrant_base_addr[7] = ClusterBaseOffset + 7 * S1QuadrantAddressSpace;
  assign s1_quadrant_cfg_base_addr[7] = S1QuadrantCfgBaseOffset + 7 * S1QuadrantCfgAddressSpace;

  // Crossbars

  /// Address map of the `quadrant_pre_xbar_0` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar0Addrmap;
  assign QuadrantPreXbar0Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_0_in_req_t   [0:0] quadrant_pre_xbar_0_in_req;
  quadrant_pre_xbar_0_in_resp_t  [0:0] quadrant_pre_xbar_0_in_rsp;
  quadrant_pre_xbar_0_out_req_t  [1:0] quadrant_pre_xbar_0_out_req;
  quadrant_pre_xbar_0_out_resp_t [1:0] quadrant_pre_xbar_0_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar0Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_0 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_0_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_0_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_0_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_0_out_rsp),
      .addr_map_i           (QuadrantPreXbar0Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_pre_xbar_1` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar1Addrmap;
  assign QuadrantPreXbar1Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_1_in_req_t   [0:0] quadrant_pre_xbar_1_in_req;
  quadrant_pre_xbar_1_in_resp_t  [0:0] quadrant_pre_xbar_1_in_rsp;
  quadrant_pre_xbar_1_out_req_t  [1:0] quadrant_pre_xbar_1_out_req;
  quadrant_pre_xbar_1_out_resp_t [1:0] quadrant_pre_xbar_1_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar1Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_1 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_1_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_1_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_1_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_1_out_rsp),
      .addr_map_i           (QuadrantPreXbar1Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_pre_xbar_2` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar2Addrmap;
  assign QuadrantPreXbar2Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_2_in_req_t   [0:0] quadrant_pre_xbar_2_in_req;
  quadrant_pre_xbar_2_in_resp_t  [0:0] quadrant_pre_xbar_2_in_rsp;
  quadrant_pre_xbar_2_out_req_t  [1:0] quadrant_pre_xbar_2_out_req;
  quadrant_pre_xbar_2_out_resp_t [1:0] quadrant_pre_xbar_2_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar2Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_2 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_2_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_2_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_2_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_2_out_rsp),
      .addr_map_i           (QuadrantPreXbar2Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_pre_xbar_3` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar3Addrmap;
  assign QuadrantPreXbar3Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_3_in_req_t   [0:0] quadrant_pre_xbar_3_in_req;
  quadrant_pre_xbar_3_in_resp_t  [0:0] quadrant_pre_xbar_3_in_rsp;
  quadrant_pre_xbar_3_out_req_t  [1:0] quadrant_pre_xbar_3_out_req;
  quadrant_pre_xbar_3_out_resp_t [1:0] quadrant_pre_xbar_3_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar3Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_3 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_3_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_3_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_3_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_3_out_rsp),
      .addr_map_i           (QuadrantPreXbar3Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_pre_xbar_4` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar4Addrmap;
  assign QuadrantPreXbar4Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_4_in_req_t   [0:0] quadrant_pre_xbar_4_in_req;
  quadrant_pre_xbar_4_in_resp_t  [0:0] quadrant_pre_xbar_4_in_rsp;
  quadrant_pre_xbar_4_out_req_t  [1:0] quadrant_pre_xbar_4_out_req;
  quadrant_pre_xbar_4_out_resp_t [1:0] quadrant_pre_xbar_4_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar4Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_4 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_4_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_4_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_4_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_4_out_rsp),
      .addr_map_i           (QuadrantPreXbar4Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_pre_xbar_5` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar5Addrmap;
  assign QuadrantPreXbar5Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_5_in_req_t   [0:0] quadrant_pre_xbar_5_in_req;
  quadrant_pre_xbar_5_in_resp_t  [0:0] quadrant_pre_xbar_5_in_rsp;
  quadrant_pre_xbar_5_out_req_t  [1:0] quadrant_pre_xbar_5_out_req;
  quadrant_pre_xbar_5_out_resp_t [1:0] quadrant_pre_xbar_5_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar5Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_5 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_5_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_5_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_5_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_5_out_rsp),
      .addr_map_i           (QuadrantPreXbar5Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_pre_xbar_6` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar6Addrmap;
  assign QuadrantPreXbar6Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_6_in_req_t   [0:0] quadrant_pre_xbar_6_in_req;
  quadrant_pre_xbar_6_in_resp_t  [0:0] quadrant_pre_xbar_6_in_rsp;
  quadrant_pre_xbar_6_out_req_t  [1:0] quadrant_pre_xbar_6_out_req;
  quadrant_pre_xbar_6_out_resp_t [1:0] quadrant_pre_xbar_6_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar6Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_6 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_6_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_6_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_6_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_6_out_rsp),
      .addr_map_i           (QuadrantPreXbar6Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_pre_xbar_7` crossbar.
  xbar_rule_48_t [2:0] QuadrantPreXbar7Addrmap;
  assign QuadrantPreXbar7Addrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h70020000 },
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 }
};

  quadrant_pre_xbar_7_in_req_t   [0:0] quadrant_pre_xbar_7_in_req;
  quadrant_pre_xbar_7_in_resp_t  [0:0] quadrant_pre_xbar_7_in_rsp;
  quadrant_pre_xbar_7_out_req_t  [1:0] quadrant_pre_xbar_7_out_req;
  quadrant_pre_xbar_7_out_resp_t [1:0] quadrant_pre_xbar_7_out_rsp;

  axi_xbar #(
      .Cfg          (QuadrantPreXbar7Cfg),
      .Connectivity (2'b11),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i4_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_quadrant_pre_xbar_7 (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_pre_xbar_7_in_req),
      .slv_ports_resp_o     (quadrant_pre_xbar_7_in_rsp),
      .mst_ports_req_o      (quadrant_pre_xbar_7_out_req),
      .mst_ports_resp_i     (quadrant_pre_xbar_7_out_rsp),
      .addr_map_i           (QuadrantPreXbar7Addrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `quadrant_inter_xbar` crossbar.
  xbar_rule_48_t [9:0] QuadrantInterXbarAddrmap;
  assign QuadrantInterXbarAddrmap = '{
  '{ idx: 0, start_addr: 48'h00000000, end_addr: 48'h10000000 },
  '{ idx: 0, start_addr: 48'h20000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h10000000, end_addr: 48'h10100000 },
  '{ idx: 2, start_addr: 48'h10100000, end_addr: 48'h10200000 },
  '{ idx: 3, start_addr: 48'h10200000, end_addr: 48'h10300000 },
  '{ idx: 4, start_addr: 48'h10300000, end_addr: 48'h10400000 },
  '{ idx: 5, start_addr: 48'h10400000, end_addr: 48'h10500000 },
  '{ idx: 6, start_addr: 48'h10500000, end_addr: 48'h10600000 },
  '{ idx: 7, start_addr: 48'h10600000, end_addr: 48'h10700000 },
  '{ idx: 8, start_addr: 48'h10700000, end_addr: 48'h10800000 }
};

  quadrant_inter_xbar_in_req_t   [8:0] quadrant_inter_xbar_in_req;
  quadrant_inter_xbar_in_resp_t  [8:0] quadrant_inter_xbar_in_rsp;
  quadrant_inter_xbar_out_req_t  [8:0] quadrant_inter_xbar_out_req;
  quadrant_inter_xbar_out_resp_t [8:0] quadrant_inter_xbar_out_rsp;

  axi_xbar #(
      .Cfg(QuadrantInterXbarCfg),
      .Connectivity  ( 81'b011111111101111111110111111111011111111101111111110111111111011111111101111111110 ),
      .AtopSupport(0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .slv_r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .slv_req_t(axi_a48_d512_i4_u0_req_t),
      .slv_resp_t(axi_a48_d512_i4_u0_resp_t),
      .mst_req_t(axi_a48_d512_i8_u0_req_t),
      .mst_resp_t(axi_a48_d512_i8_u0_resp_t),
      .rule_t(xbar_rule_48_t)
  ) i_quadrant_inter_xbar (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (quadrant_inter_xbar_in_req),
      .slv_ports_resp_o     (quadrant_inter_xbar_in_rsp),
      .mst_ports_req_o      (quadrant_inter_xbar_out_req),
      .mst_ports_resp_i     (quadrant_inter_xbar_out_rsp),
      .addr_map_i           (QuadrantInterXbarAddrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `hbm_xbar` crossbar.
  xbar_rule_48_t [9:0] HbmXbarAddrmap;
  assign HbmXbarAddrmap = '{
  '{ idx: 0, start_addr: 48'h80000000, end_addr: 48'hc0000000 },
  '{ idx: 0, start_addr: 48'h1000000000, end_addr: 48'h1040000000 },
  '{ idx: 1, start_addr: 48'hc0000000, end_addr: 48'h100000000 },
  '{ idx: 1, start_addr: 48'h1040000000, end_addr: 48'h1080000000 },
  '{ idx: 2, start_addr: 48'h1080000000, end_addr: 48'h10c0000000 },
  '{ idx: 3, start_addr: 48'h10c0000000, end_addr: 48'h1100000000 },
  '{ idx: 4, start_addr: 48'h1100000000, end_addr: 48'h1140000000 },
  '{ idx: 5, start_addr: 48'h1140000000, end_addr: 48'h1180000000 },
  '{ idx: 6, start_addr: 48'h1180000000, end_addr: 48'h11c0000000 },
  '{ idx: 7, start_addr: 48'h11c0000000, end_addr: 48'h1200000000 }
};

  hbm_xbar_in_req_t   [8:0] hbm_xbar_in_req;
  hbm_xbar_in_resp_t  [8:0] hbm_xbar_in_rsp;
  hbm_xbar_out_req_t  [7:0] hbm_xbar_out_req;
  hbm_xbar_out_resp_t [7:0] hbm_xbar_out_rsp;

  axi_xbar #(
      .Cfg          (HbmXbarCfg),
      .Connectivity (72'b111111111111111111111111111111111111111111111111111111111111111111111111),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i8_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i8_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i8_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i8_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_hbm_xbar (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (hbm_xbar_in_req),
      .slv_ports_resp_o     (hbm_xbar_in_rsp),
      .mst_ports_req_o      (hbm_xbar_out_req),
      .mst_ports_resp_i     (hbm_xbar_out_rsp),
      .addr_map_i           (HbmXbarAddrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `soc_wide_xbar` crossbar.
  xbar_rule_48_t [4:0] SocWideXbarAddrmap;
  assign SocWideXbarAddrmap = '{
  '{ idx: 0, start_addr: 48'h10000000000, end_addr: 48'h20000000000 },
  '{ idx: 1, start_addr: 48'h80000000, end_addr: 48'h1200000000 },
  '{ idx: 2, start_addr: 48'h10000000, end_addr: 48'h10800000 },
  '{ idx: 3, start_addr: 48'h00000000, end_addr: 48'h10000000 },
  '{ idx: 3, start_addr: 48'h20000000, end_addr: 48'h70020000 }
};

  soc_wide_xbar_in_req_t   [2:0] soc_wide_xbar_in_req;
  soc_wide_xbar_in_resp_t  [2:0] soc_wide_xbar_in_rsp;
  soc_wide_xbar_out_req_t  [3:0] soc_wide_xbar_out_req;
  soc_wide_xbar_out_resp_t [3:0] soc_wide_xbar_out_rsp;

  axi_xbar #(
      .Cfg          (SocWideXbarCfg),
      .Connectivity (12'b011110111110),
      .AtopSupport  (0),
      .slv_aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d512_i6_u0_aw_chan_t),
      .w_chan_t     (axi_a48_d512_i4_u0_w_chan_t),
      .slv_b_chan_t (axi_a48_d512_i4_u0_b_chan_t),
      .mst_b_chan_t (axi_a48_d512_i6_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d512_i6_u0_ar_chan_t),
      .slv_r_chan_t (axi_a48_d512_i4_u0_r_chan_t),
      .mst_r_chan_t (axi_a48_d512_i6_u0_r_chan_t),
      .slv_req_t    (axi_a48_d512_i4_u0_req_t),
      .slv_resp_t   (axi_a48_d512_i4_u0_resp_t),
      .mst_req_t    (axi_a48_d512_i6_u0_req_t),
      .mst_resp_t   (axi_a48_d512_i6_u0_resp_t),
      .rule_t       (xbar_rule_48_t)
  ) i_soc_wide_xbar (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (soc_wide_xbar_in_req),
      .slv_ports_resp_o     (soc_wide_xbar_in_rsp),
      .mst_ports_req_o      (soc_wide_xbar_out_req),
      .mst_ports_resp_i     (soc_wide_xbar_out_rsp),
      .addr_map_i           (SocWideXbarAddrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );

  /// Address map of the `soc_narrow_xbar` crossbar.
  xbar_rule_48_t [21:0] SocNarrowXbarAddrmap;
  assign SocNarrowXbarAddrmap = '{
  '{ idx: 8, start_addr: 48'h80000000, end_addr: 48'h20000000000 },
  '{ idx: 10, start_addr: 48'h00000000, end_addr: 48'h00001000 },
  '{ idx: 11, start_addr: 48'h70000000, end_addr: 48'h70020000 },
  '{ idx: 12, start_addr: 48'h01000000, end_addr: 48'h0a010000 },
  '{ idx: 12, start_addr: 48'h0c000000, end_addr: 48'h10000000 },
  '{ idx: 13, start_addr: 48'h20000000, end_addr: 48'h70000000 },
  '{ idx: 0, start_addr: s1_quadrant_base_addr[0], end_addr: s1_quadrant_base_addr[0] + S1QuadrantAddressSpace },
  '{ idx: 0, start_addr: s1_quadrant_cfg_base_addr[0], end_addr: s1_quadrant_cfg_base_addr[0] + S1QuadrantCfgAddressSpace },
  '{ idx: 1, start_addr: s1_quadrant_base_addr[1], end_addr: s1_quadrant_base_addr[1] + S1QuadrantAddressSpace },
  '{ idx: 1, start_addr: s1_quadrant_cfg_base_addr[1], end_addr: s1_quadrant_cfg_base_addr[1] + S1QuadrantCfgAddressSpace },
  '{ idx: 2, start_addr: s1_quadrant_base_addr[2], end_addr: s1_quadrant_base_addr[2] + S1QuadrantAddressSpace },
  '{ idx: 2, start_addr: s1_quadrant_cfg_base_addr[2], end_addr: s1_quadrant_cfg_base_addr[2] + S1QuadrantCfgAddressSpace },
  '{ idx: 3, start_addr: s1_quadrant_base_addr[3], end_addr: s1_quadrant_base_addr[3] + S1QuadrantAddressSpace },
  '{ idx: 3, start_addr: s1_quadrant_cfg_base_addr[3], end_addr: s1_quadrant_cfg_base_addr[3] + S1QuadrantCfgAddressSpace },
  '{ idx: 4, start_addr: s1_quadrant_base_addr[4], end_addr: s1_quadrant_base_addr[4] + S1QuadrantAddressSpace },
  '{ idx: 4, start_addr: s1_quadrant_cfg_base_addr[4], end_addr: s1_quadrant_cfg_base_addr[4] + S1QuadrantCfgAddressSpace },
  '{ idx: 5, start_addr: s1_quadrant_base_addr[5], end_addr: s1_quadrant_base_addr[5] + S1QuadrantAddressSpace },
  '{ idx: 5, start_addr: s1_quadrant_cfg_base_addr[5], end_addr: s1_quadrant_cfg_base_addr[5] + S1QuadrantCfgAddressSpace },
  '{ idx: 6, start_addr: s1_quadrant_base_addr[6], end_addr: s1_quadrant_base_addr[6] + S1QuadrantAddressSpace },
  '{ idx: 6, start_addr: s1_quadrant_cfg_base_addr[6], end_addr: s1_quadrant_cfg_base_addr[6] + S1QuadrantCfgAddressSpace },
  '{ idx: 7, start_addr: s1_quadrant_base_addr[7], end_addr: s1_quadrant_base_addr[7] + S1QuadrantAddressSpace },
  '{ idx: 7, start_addr: s1_quadrant_cfg_base_addr[7], end_addr: s1_quadrant_cfg_base_addr[7] + S1QuadrantCfgAddressSpace }
};

  soc_narrow_xbar_in_req_t   [12:0] soc_narrow_xbar_in_req;
  soc_narrow_xbar_in_resp_t  [12:0] soc_narrow_xbar_in_rsp;
  soc_narrow_xbar_out_req_t  [13:0] soc_narrow_xbar_out_req;
  soc_narrow_xbar_out_resp_t [13:0] soc_narrow_xbar_out_rsp;

  axi_xbar #(
      .Cfg(SocNarrowXbarCfg),
      .Connectivity  ( 182'b11110111111111011111111111111110111111111111111011111111111111111111111111110111111111111110111111111111110111111111111110111111111111110111111111111110111111111111110111111111111110 ),
      .AtopSupport(1),
      .slv_aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .mst_aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .slv_b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .mst_b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .slv_ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .mst_ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .slv_r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .mst_r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .slv_req_t(axi_a48_d64_i4_u0_req_t),
      .slv_resp_t(axi_a48_d64_i4_u0_resp_t),
      .mst_req_t(axi_a48_d64_i8_u0_req_t),
      .mst_resp_t(axi_a48_d64_i8_u0_resp_t),
      .rule_t(xbar_rule_48_t)
  ) i_soc_narrow_xbar (
      .clk_i                (clk_i),
      .rst_ni               (rst_ni),
      .test_i               (test_mode_i),
      .slv_ports_req_i      (soc_narrow_xbar_in_req),
      .slv_ports_resp_o     (soc_narrow_xbar_in_rsp),
      .mst_ports_req_o      (soc_narrow_xbar_out_req),
      .mst_ports_resp_i     (soc_narrow_xbar_out_rsp),
      .addr_map_i           (SocNarrowXbarAddrmap),
      .en_default_mst_port_i('1),
      .default_mst_port_i   ('0)
  );


  ///////////////////////////////////
  // Connections between crossbars //
  ///////////////////////////////////
  axi_a48_d512_i4_u0_req_t  inter_to_wide_iw_conv_7_req;
  axi_a48_d512_i4_u0_resp_t inter_to_wide_iw_conv_7_rsp;

  axi_id_remap #(
      .AxiSlvPortIdWidth(8),
      .AxiSlvPortMaxUniqIds(16),
      .AxiMaxTxnsPerId(4),
      .AxiMstPortIdWidth(4),
      .slv_req_t(axi_a48_d512_i8_u0_req_t),
      .slv_resp_t(axi_a48_d512_i8_u0_resp_t),
      .mst_req_t(axi_a48_d512_i4_u0_req_t),
      .mst_resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_inter_to_wide_iw_conv_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_WIDE_XBAR]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_WIDE_XBAR]),
      .mst_req_o(inter_to_wide_iw_conv_7_req),
      .mst_resp_i(inter_to_wide_iw_conv_7_rsp)
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_inter_to_wide_cut_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(inter_to_wide_iw_conv_7_req),
      .slv_resp_o(inter_to_wide_iw_conv_7_rsp),
      .mst_req_o(soc_wide_xbar_in_req[SOC_WIDE_XBAR_IN_QUADRANT_INTER_XBAR]),
      .mst_resp_i(soc_wide_xbar_in_rsp[SOC_WIDE_XBAR_IN_QUADRANT_INTER_XBAR])
  );
  axi_a48_d512_i6_u0_req_t  wide_to_inter_cut_7_req;
  axi_a48_d512_i6_u0_resp_t wide_to_inter_cut_7_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i6_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i6_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i6_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i6_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i6_u0_r_chan_t),
      .req_t(axi_a48_d512_i6_u0_req_t),
      .resp_t(axi_a48_d512_i6_u0_resp_t)
  ) i_wide_to_inter_cut_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_wide_xbar_out_req[SOC_WIDE_XBAR_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(soc_wide_xbar_out_rsp[SOC_WIDE_XBAR_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(wide_to_inter_cut_7_req),
      .mst_resp_i(wide_to_inter_cut_7_rsp)
  );
  axi_id_remap #(
      .AxiSlvPortIdWidth(6),
      .AxiSlvPortMaxUniqIds(16),
      .AxiMaxTxnsPerId(4),
      .AxiMstPortIdWidth(4),
      .slv_req_t(axi_a48_d512_i6_u0_req_t),
      .slv_resp_t(axi_a48_d512_i6_u0_resp_t),
      .mst_req_t(axi_a48_d512_i4_u0_req_t),
      .mst_resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_to_inter_iw_conv_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_to_inter_cut_7_req),
      .slv_resp_o(wide_to_inter_cut_7_rsp),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_WIDE_XBAR]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_WIDE_XBAR])
  );
  axi_a48_d512_i4_u0_req_t  wide_to_hbm_iw_conv_7_req;
  axi_a48_d512_i4_u0_resp_t wide_to_hbm_iw_conv_7_rsp;

  axi_id_remap #(
      .AxiSlvPortIdWidth(6),
      .AxiSlvPortMaxUniqIds(16),
      .AxiMaxTxnsPerId(4),
      .AxiMstPortIdWidth(4),
      .slv_req_t(axi_a48_d512_i6_u0_req_t),
      .slv_resp_t(axi_a48_d512_i6_u0_resp_t),
      .mst_req_t(axi_a48_d512_i4_u0_req_t),
      .mst_resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_to_hbm_iw_conv_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_wide_xbar_out_req[SOC_WIDE_XBAR_OUT_HBM_XBAR]),
      .slv_resp_o(soc_wide_xbar_out_rsp[SOC_WIDE_XBAR_OUT_HBM_XBAR]),
      .mst_req_o(wide_to_hbm_iw_conv_7_req),
      .mst_resp_i(wide_to_hbm_iw_conv_7_rsp)
  );
  axi_multicut #(
      .NoCuts(6),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_to_hbm_iw_cut_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_to_hbm_iw_conv_7_req),
      .slv_resp_o(wide_to_hbm_iw_conv_7_rsp),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_WIDE_XBAR]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_WIDE_XBAR])
  );
  axi_a48_d64_i8_u0_req_t  soc_narrow_wide_amo_adapter_req;
  axi_a48_d64_i8_u0_resp_t soc_narrow_wide_amo_adapter_rsp;

  axi_riscv_atomics #(
      .AXI_ADDR_WIDTH(48),
      .AXI_DATA_WIDTH(64),
      .AXI_ID_WIDTH(8),
      .AXI_USER_WIDTH(1),
      .AXI_MAX_WRITE_TXNS(16),
      .RISCV_WORD_WIDTH(64)
  ) i_soc_narrow_wide_amo_adapter (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_aw_addr_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.addr),
      .slv_aw_prot_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.prot),
      .slv_aw_region_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.region),
      .slv_aw_atop_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.atop),
      .slv_aw_len_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.len),
      .slv_aw_size_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.size),
      .slv_aw_burst_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.burst),
      .slv_aw_lock_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.lock),
      .slv_aw_cache_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.cache),
      .slv_aw_qos_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.qos),
      .slv_aw_id_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.id),
      .slv_aw_user_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw.user),
      .slv_aw_ready_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw_ready),
      .slv_aw_valid_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].aw_valid),
      .slv_ar_addr_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.addr),
      .slv_ar_prot_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.prot),
      .slv_ar_region_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.region),
      .slv_ar_len_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.len),
      .slv_ar_size_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.size),
      .slv_ar_burst_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.burst),
      .slv_ar_lock_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.lock),
      .slv_ar_cache_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.cache),
      .slv_ar_qos_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.qos),
      .slv_ar_id_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.id),
      .slv_ar_user_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar.user),
      .slv_ar_ready_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar_ready),
      .slv_ar_valid_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].ar_valid),
      .slv_w_data_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].w.data),
      .slv_w_strb_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].w.strb),
      .slv_w_user_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].w.user),
      .slv_w_last_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].w.last),
      .slv_w_ready_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].w_ready),
      .slv_w_valid_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].w_valid),
      .slv_r_data_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].r.data),
      .slv_r_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].r.resp),
      .slv_r_last_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].r.last),
      .slv_r_id_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].r.id),
      .slv_r_user_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].r.user),
      .slv_r_ready_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].r_ready),
      .slv_r_valid_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].r_valid),
      .slv_b_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].b.resp),
      .slv_b_id_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].b.id),
      .slv_b_user_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].b.user),
      .slv_b_ready_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SOC_WIDE].b_ready),
      .slv_b_valid_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SOC_WIDE].b_valid),

      .mst_aw_addr_o(soc_narrow_wide_amo_adapter_req.aw.addr),
      .mst_aw_prot_o(soc_narrow_wide_amo_adapter_req.aw.prot),
      .mst_aw_region_o(soc_narrow_wide_amo_adapter_req.aw.region),
      .mst_aw_atop_o(soc_narrow_wide_amo_adapter_req.aw.atop),
      .mst_aw_len_o(soc_narrow_wide_amo_adapter_req.aw.len),
      .mst_aw_size_o(soc_narrow_wide_amo_adapter_req.aw.size),
      .mst_aw_burst_o(soc_narrow_wide_amo_adapter_req.aw.burst),
      .mst_aw_lock_o(soc_narrow_wide_amo_adapter_req.aw.lock),
      .mst_aw_cache_o(soc_narrow_wide_amo_adapter_req.aw.cache),
      .mst_aw_qos_o(soc_narrow_wide_amo_adapter_req.aw.qos),
      .mst_aw_id_o(soc_narrow_wide_amo_adapter_req.aw.id),
      .mst_aw_user_o(soc_narrow_wide_amo_adapter_req.aw.user),
      .mst_aw_ready_i(soc_narrow_wide_amo_adapter_rsp.aw_ready),
      .mst_aw_valid_o(soc_narrow_wide_amo_adapter_req.aw_valid),
      .mst_ar_addr_o(soc_narrow_wide_amo_adapter_req.ar.addr),
      .mst_ar_prot_o(soc_narrow_wide_amo_adapter_req.ar.prot),
      .mst_ar_region_o(soc_narrow_wide_amo_adapter_req.ar.region),
      .mst_ar_len_o(soc_narrow_wide_amo_adapter_req.ar.len),
      .mst_ar_size_o(soc_narrow_wide_amo_adapter_req.ar.size),
      .mst_ar_burst_o(soc_narrow_wide_amo_adapter_req.ar.burst),
      .mst_ar_lock_o(soc_narrow_wide_amo_adapter_req.ar.lock),
      .mst_ar_cache_o(soc_narrow_wide_amo_adapter_req.ar.cache),
      .mst_ar_qos_o(soc_narrow_wide_amo_adapter_req.ar.qos),
      .mst_ar_id_o(soc_narrow_wide_amo_adapter_req.ar.id),
      .mst_ar_user_o(soc_narrow_wide_amo_adapter_req.ar.user),
      .mst_ar_ready_i(soc_narrow_wide_amo_adapter_rsp.ar_ready),
      .mst_ar_valid_o(soc_narrow_wide_amo_adapter_req.ar_valid),
      .mst_w_data_o(soc_narrow_wide_amo_adapter_req.w.data),
      .mst_w_strb_o(soc_narrow_wide_amo_adapter_req.w.strb),
      .mst_w_user_o(soc_narrow_wide_amo_adapter_req.w.user),
      .mst_w_last_o(soc_narrow_wide_amo_adapter_req.w.last),
      .mst_w_ready_i(soc_narrow_wide_amo_adapter_rsp.w_ready),
      .mst_w_valid_o(soc_narrow_wide_amo_adapter_req.w_valid),
      .mst_r_data_i(soc_narrow_wide_amo_adapter_rsp.r.data),
      .mst_r_resp_i(soc_narrow_wide_amo_adapter_rsp.r.resp),
      .mst_r_last_i(soc_narrow_wide_amo_adapter_rsp.r.last),
      .mst_r_id_i(soc_narrow_wide_amo_adapter_rsp.r.id),
      .mst_r_user_i(soc_narrow_wide_amo_adapter_rsp.r.user),
      .mst_r_ready_o(soc_narrow_wide_amo_adapter_req.r_ready),
      .mst_r_valid_i(soc_narrow_wide_amo_adapter_rsp.r_valid),
      .mst_b_resp_i(soc_narrow_wide_amo_adapter_rsp.b.resp),
      .mst_b_id_i(soc_narrow_wide_amo_adapter_rsp.b.id),
      .mst_b_user_i(soc_narrow_wide_amo_adapter_rsp.b.user),
      .mst_b_ready_o(soc_narrow_wide_amo_adapter_req.b_ready),
      .mst_b_valid_i(soc_narrow_wide_amo_adapter_rsp.b_valid)
  );

  axi_a48_d64_i4_u0_req_t  soc_narrow_wide_iwc_req;
  axi_a48_d64_i4_u0_resp_t soc_narrow_wide_iwc_rsp;

  axi_id_remap #(
      .AxiSlvPortIdWidth(8),
      .AxiSlvPortMaxUniqIds(16),
      .AxiMaxTxnsPerId(4),
      .AxiMstPortIdWidth(4),
      .slv_req_t(axi_a48_d64_i8_u0_req_t),
      .slv_resp_t(axi_a48_d64_i8_u0_resp_t),
      .mst_req_t(axi_a48_d64_i4_u0_req_t),
      .mst_resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_soc_narrow_wide_iwc (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_wide_amo_adapter_req),
      .slv_resp_o(soc_narrow_wide_amo_adapter_rsp),
      .mst_req_o(soc_narrow_wide_iwc_req),
      .mst_resp_i(soc_narrow_wide_iwc_rsp)
  );
  axi_dw_converter #(
      .AxiSlvPortDataWidth(64),
      .AxiMstPortDataWidth(512),
      .AxiAddrWidth(48),
      .AxiIdWidth(4),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .mst_w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .slv_w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .mst_r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .slv_r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .axi_mst_req_t(axi_a48_d512_i4_u0_req_t),
      .axi_mst_resp_t(axi_a48_d512_i4_u0_resp_t),
      .axi_slv_req_t(axi_a48_d64_i4_u0_req_t),
      .axi_slv_resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_soc_narrow_wide_dw (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_wide_iwc_req),
      .slv_resp_o(soc_narrow_wide_iwc_rsp),
      .mst_req_o(soc_wide_xbar_in_req[SOC_WIDE_XBAR_IN_SOC_NARROW]),
      .mst_resp_i(soc_wide_xbar_in_rsp[SOC_WIDE_XBAR_IN_SOC_NARROW])
  );

  axi_a48_d512_i4_u0_req_t  soc_wide_narrow_iwc_req;
  axi_a48_d512_i4_u0_resp_t soc_wide_narrow_iwc_rsp;

  axi_id_remap #(
      .AxiSlvPortIdWidth(6),
      .AxiSlvPortMaxUniqIds(16),
      .AxiMaxTxnsPerId(4),
      .AxiMstPortIdWidth(4),
      .slv_req_t(axi_a48_d512_i6_u0_req_t),
      .slv_resp_t(axi_a48_d512_i6_u0_resp_t),
      .mst_req_t(axi_a48_d512_i4_u0_req_t),
      .mst_resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_soc_wide_narrow_iwc (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_wide_xbar_out_req[SOC_WIDE_XBAR_OUT_SOC_NARROW]),
      .slv_resp_o(soc_wide_xbar_out_rsp[SOC_WIDE_XBAR_OUT_SOC_NARROW]),
      .mst_req_o(soc_wide_narrow_iwc_req),
      .mst_resp_i(soc_wide_narrow_iwc_rsp)
  );
  axi_a48_d64_i4_u0_req_t  soc_wide_narrow_dw_req;
  axi_a48_d64_i4_u0_resp_t soc_wide_narrow_dw_rsp;

  axi_dw_converter #(
      .AxiSlvPortDataWidth(512),
      .AxiMstPortDataWidth(64),
      .AxiAddrWidth(48),
      .AxiIdWidth(4),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .mst_w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .slv_w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .mst_r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .slv_r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .axi_mst_req_t(axi_a48_d64_i4_u0_req_t),
      .axi_mst_resp_t(axi_a48_d64_i4_u0_resp_t),
      .axi_slv_req_t(axi_a48_d512_i4_u0_req_t),
      .axi_slv_resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_soc_wide_narrow_dw (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_wide_narrow_iwc_req),
      .slv_resp_o(soc_wide_narrow_iwc_rsp),
      .mst_req_o(soc_wide_narrow_dw_req),
      .mst_resp_i(soc_wide_narrow_dw_rsp)
  );

  assign soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_SOC_WIDE] = soc_wide_narrow_dw_req;
  assign soc_wide_narrow_dw_rsp = soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_SOC_WIDE];


  //////////
  // PCIe //
  //////////
  axi_a48_d64_i8_u0_req_t  pcie_out_req;
  axi_a48_d64_i8_u0_resp_t pcie_out_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_pcie_out_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_PCIE]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_PCIE]),
      .mst_req_o(pcie_out_req),
      .mst_resp_i(pcie_out_rsp)
  );
  axi_a48_d64_i4_u0_req_t  pcie_in_req;
  axi_a48_d64_i4_u0_resp_t pcie_in_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_pcie_in_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(pcie_in_req),
      .slv_resp_o(pcie_in_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_PCIE]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_PCIE])
  );

  assign pcie_axi_req_o = pcie_out_req;
  assign pcie_out_rsp = pcie_axi_rsp_i;
  assign pcie_in_req = pcie_axi_req_i;
  assign pcie_axi_rsp_o = pcie_in_rsp;

  //////////
  // CVA6 //
  //////////
  axi_a48_d64_i4_u0_req_t  cva6_mst_req;
  axi_a48_d64_i4_u0_resp_t cva6_mst_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_cva6_mst_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(cva6_mst_req),
      .slv_resp_o(cva6_mst_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_CVA6]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_CVA6])
  );

  occamy_cva6 i_occamy_cva6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .irq_i(eip_i),
      .ipi_i(msip_i[0]),
      .time_irq_i(mtip_i[0]),
      .debug_req_i(debug_req_i[0]),
      .axi_req_o(cva6_mst_req),
      .axi_resp_i(cva6_mst_rsp),
      .sram_cfg_i(sram_cfgs_i.cva6)
  );

  //////////////////////
  // S1 Quadrant 0 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_0_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_0_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_0]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_0]),
      .mst_req_o(narrow_in_0_req),
      .mst_resp_i(narrow_in_0_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_0_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_0_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_0_req),
      .slv_resp_o(narrow_out_0_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_0]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_0])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_0_req;
  axi_a48_d512_i8_u0_resp_t wide_in_0_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_0]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_0]),
      .mst_req_o(wide_in_0_req),
      .mst_resp_i(wide_in_0_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_0_req;
  axi_a48_d512_i4_u0_resp_t wide_out_0_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_0_req),
      .slv_resp_o(wide_out_0_rsp),
      .mst_req_o(quadrant_pre_xbar_0_in_req[QUADRANT_PRE_XBAR_0_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_0_in_rsp[QUADRANT_PRE_XBAR_0_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_0_out_req[QUADRANT_PRE_XBAR_0_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_0_out_rsp[QUADRANT_PRE_XBAR_0_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_0]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_0])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_0_out_req[QUADRANT_PRE_XBAR_0_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_0_out_rsp[QUADRANT_PRE_XBAR_0_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_0]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_0])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd0),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[36:1]),
      .msip_i(msip_i[36:1]),
      .quadrant_narrow_out_req_o(narrow_out_0_req),
      .quadrant_narrow_out_rsp_i(narrow_out_0_rsp),
      .quadrant_narrow_in_req_i(narrow_in_0_req),
      .quadrant_narrow_in_rsp_o(narrow_in_0_rsp),
      .quadrant_wide_out_req_o(wide_out_0_req),
      .quadrant_wide_out_rsp_i(wide_out_0_rsp),
      .quadrant_wide_in_req_i(wide_in_0_req),
      .quadrant_wide_in_rsp_o(wide_in_0_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );

  //////////////////////
  // S1 Quadrant 1 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_1_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_1_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_1]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_1]),
      .mst_req_o(narrow_in_1_req),
      .mst_resp_i(narrow_in_1_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_1_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_1_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_1_req),
      .slv_resp_o(narrow_out_1_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_1]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_1])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_1_req;
  axi_a48_d512_i8_u0_resp_t wide_in_1_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_1]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_1]),
      .mst_req_o(wide_in_1_req),
      .mst_resp_i(wide_in_1_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_1_req;
  axi_a48_d512_i4_u0_resp_t wide_out_1_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_1_req),
      .slv_resp_o(wide_out_1_rsp),
      .mst_req_o(quadrant_pre_xbar_1_in_req[QUADRANT_PRE_XBAR_1_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_1_in_rsp[QUADRANT_PRE_XBAR_1_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_1_out_req[QUADRANT_PRE_XBAR_1_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_1_out_rsp[QUADRANT_PRE_XBAR_1_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_1]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_1])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_1_out_req[QUADRANT_PRE_XBAR_1_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_1_out_rsp[QUADRANT_PRE_XBAR_1_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_1]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_1])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd1),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[72:37]),
      .msip_i(msip_i[72:37]),
      .quadrant_narrow_out_req_o(narrow_out_1_req),
      .quadrant_narrow_out_rsp_i(narrow_out_1_rsp),
      .quadrant_narrow_in_req_i(narrow_in_1_req),
      .quadrant_narrow_in_rsp_o(narrow_in_1_rsp),
      .quadrant_wide_out_req_o(wide_out_1_req),
      .quadrant_wide_out_rsp_i(wide_out_1_rsp),
      .quadrant_wide_in_req_i(wide_in_1_req),
      .quadrant_wide_in_rsp_o(wide_in_1_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );

  //////////////////////
  // S1 Quadrant 2 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_2_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_2_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_2]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_2]),
      .mst_req_o(narrow_in_2_req),
      .mst_resp_i(narrow_in_2_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_2_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_2_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_2_req),
      .slv_resp_o(narrow_out_2_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_2]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_2])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_2_req;
  axi_a48_d512_i8_u0_resp_t wide_in_2_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_2]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_2]),
      .mst_req_o(wide_in_2_req),
      .mst_resp_i(wide_in_2_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_2_req;
  axi_a48_d512_i4_u0_resp_t wide_out_2_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_2_req),
      .slv_resp_o(wide_out_2_rsp),
      .mst_req_o(quadrant_pre_xbar_2_in_req[QUADRANT_PRE_XBAR_2_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_2_in_rsp[QUADRANT_PRE_XBAR_2_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_2_out_req[QUADRANT_PRE_XBAR_2_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_2_out_rsp[QUADRANT_PRE_XBAR_2_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_2]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_2])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_2_out_req[QUADRANT_PRE_XBAR_2_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_2_out_rsp[QUADRANT_PRE_XBAR_2_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_2]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_2])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd2),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[108:73]),
      .msip_i(msip_i[108:73]),
      .quadrant_narrow_out_req_o(narrow_out_2_req),
      .quadrant_narrow_out_rsp_i(narrow_out_2_rsp),
      .quadrant_narrow_in_req_i(narrow_in_2_req),
      .quadrant_narrow_in_rsp_o(narrow_in_2_rsp),
      .quadrant_wide_out_req_o(wide_out_2_req),
      .quadrant_wide_out_rsp_i(wide_out_2_rsp),
      .quadrant_wide_in_req_i(wide_in_2_req),
      .quadrant_wide_in_rsp_o(wide_in_2_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );

  //////////////////////
  // S1 Quadrant 3 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_3_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_3_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_3]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_3]),
      .mst_req_o(narrow_in_3_req),
      .mst_resp_i(narrow_in_3_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_3_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_3_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_3_req),
      .slv_resp_o(narrow_out_3_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_3]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_3])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_3_req;
  axi_a48_d512_i8_u0_resp_t wide_in_3_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_3]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_3]),
      .mst_req_o(wide_in_3_req),
      .mst_resp_i(wide_in_3_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_3_req;
  axi_a48_d512_i4_u0_resp_t wide_out_3_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_3_req),
      .slv_resp_o(wide_out_3_rsp),
      .mst_req_o(quadrant_pre_xbar_3_in_req[QUADRANT_PRE_XBAR_3_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_3_in_rsp[QUADRANT_PRE_XBAR_3_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_3_out_req[QUADRANT_PRE_XBAR_3_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_3_out_rsp[QUADRANT_PRE_XBAR_3_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_3]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_3])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_3_out_req[QUADRANT_PRE_XBAR_3_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_3_out_rsp[QUADRANT_PRE_XBAR_3_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_3]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_3])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd3),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[144:109]),
      .msip_i(msip_i[144:109]),
      .quadrant_narrow_out_req_o(narrow_out_3_req),
      .quadrant_narrow_out_rsp_i(narrow_out_3_rsp),
      .quadrant_narrow_in_req_i(narrow_in_3_req),
      .quadrant_narrow_in_rsp_o(narrow_in_3_rsp),
      .quadrant_wide_out_req_o(wide_out_3_req),
      .quadrant_wide_out_rsp_i(wide_out_3_rsp),
      .quadrant_wide_in_req_i(wide_in_3_req),
      .quadrant_wide_in_rsp_o(wide_in_3_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );

  //////////////////////
  // S1 Quadrant 4 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_4_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_4_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_4]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_4]),
      .mst_req_o(narrow_in_4_req),
      .mst_resp_i(narrow_in_4_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_4_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_4_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_4_req),
      .slv_resp_o(narrow_out_4_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_4]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_4])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_4_req;
  axi_a48_d512_i8_u0_resp_t wide_in_4_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_4]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_4]),
      .mst_req_o(wide_in_4_req),
      .mst_resp_i(wide_in_4_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_4_req;
  axi_a48_d512_i4_u0_resp_t wide_out_4_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_4_req),
      .slv_resp_o(wide_out_4_rsp),
      .mst_req_o(quadrant_pre_xbar_4_in_req[QUADRANT_PRE_XBAR_4_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_4_in_rsp[QUADRANT_PRE_XBAR_4_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_4_out_req[QUADRANT_PRE_XBAR_4_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_4_out_rsp[QUADRANT_PRE_XBAR_4_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_4]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_4])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_4_out_req[QUADRANT_PRE_XBAR_4_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_4_out_rsp[QUADRANT_PRE_XBAR_4_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_4]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_4])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd4),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[180:145]),
      .msip_i(msip_i[180:145]),
      .quadrant_narrow_out_req_o(narrow_out_4_req),
      .quadrant_narrow_out_rsp_i(narrow_out_4_rsp),
      .quadrant_narrow_in_req_i(narrow_in_4_req),
      .quadrant_narrow_in_rsp_o(narrow_in_4_rsp),
      .quadrant_wide_out_req_o(wide_out_4_req),
      .quadrant_wide_out_rsp_i(wide_out_4_rsp),
      .quadrant_wide_in_req_i(wide_in_4_req),
      .quadrant_wide_in_rsp_o(wide_in_4_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );

  //////////////////////
  // S1 Quadrant 5 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_5_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_5_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_5]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_5]),
      .mst_req_o(narrow_in_5_req),
      .mst_resp_i(narrow_in_5_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_5_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_5_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_5_req),
      .slv_resp_o(narrow_out_5_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_5]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_5])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_5_req;
  axi_a48_d512_i8_u0_resp_t wide_in_5_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_5]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_5]),
      .mst_req_o(wide_in_5_req),
      .mst_resp_i(wide_in_5_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_5_req;
  axi_a48_d512_i4_u0_resp_t wide_out_5_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_5_req),
      .slv_resp_o(wide_out_5_rsp),
      .mst_req_o(quadrant_pre_xbar_5_in_req[QUADRANT_PRE_XBAR_5_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_5_in_rsp[QUADRANT_PRE_XBAR_5_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_5_out_req[QUADRANT_PRE_XBAR_5_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_5_out_rsp[QUADRANT_PRE_XBAR_5_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_5]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_5])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_5_out_req[QUADRANT_PRE_XBAR_5_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_5_out_rsp[QUADRANT_PRE_XBAR_5_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_5]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_5])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd5),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[216:181]),
      .msip_i(msip_i[216:181]),
      .quadrant_narrow_out_req_o(narrow_out_5_req),
      .quadrant_narrow_out_rsp_i(narrow_out_5_rsp),
      .quadrant_narrow_in_req_i(narrow_in_5_req),
      .quadrant_narrow_in_rsp_o(narrow_in_5_rsp),
      .quadrant_wide_out_req_o(wide_out_5_req),
      .quadrant_wide_out_rsp_i(wide_out_5_rsp),
      .quadrant_wide_in_req_i(wide_in_5_req),
      .quadrant_wide_in_rsp_o(wide_in_5_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );

  //////////////////////
  // S1 Quadrant 6 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_6_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_6_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_6]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_6]),
      .mst_req_o(narrow_in_6_req),
      .mst_resp_i(narrow_in_6_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_6_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_6_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_6_req),
      .slv_resp_o(narrow_out_6_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_6]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_6])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_6_req;
  axi_a48_d512_i8_u0_resp_t wide_in_6_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_6]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_6]),
      .mst_req_o(wide_in_6_req),
      .mst_resp_i(wide_in_6_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_6_req;
  axi_a48_d512_i4_u0_resp_t wide_out_6_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_6_req),
      .slv_resp_o(wide_out_6_rsp),
      .mst_req_o(quadrant_pre_xbar_6_in_req[QUADRANT_PRE_XBAR_6_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_6_in_rsp[QUADRANT_PRE_XBAR_6_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_6_out_req[QUADRANT_PRE_XBAR_6_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_6_out_rsp[QUADRANT_PRE_XBAR_6_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_6]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_6])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_6_out_req[QUADRANT_PRE_XBAR_6_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_6_out_rsp[QUADRANT_PRE_XBAR_6_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_6]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_6])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd6),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[252:217]),
      .msip_i(msip_i[252:217]),
      .quadrant_narrow_out_req_o(narrow_out_6_req),
      .quadrant_narrow_out_rsp_i(narrow_out_6_rsp),
      .quadrant_narrow_in_req_i(narrow_in_6_req),
      .quadrant_narrow_in_rsp_o(narrow_in_6_rsp),
      .quadrant_wide_out_req_o(wide_out_6_req),
      .quadrant_wide_out_rsp_i(wide_out_6_rsp),
      .quadrant_wide_in_req_i(wide_in_6_req),
      .quadrant_wide_in_rsp_o(wide_in_6_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );

  //////////////////////
  // S1 Quadrant 7 //
  //////////////////////
  axi_a48_d64_i8_u0_req_t  narrow_in_7_req;
  axi_a48_d64_i8_u0_resp_t narrow_in_7_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_in_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_S1_QUADRANT_7]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_S1_QUADRANT_7]),
      .mst_req_o(narrow_in_7_req),
      .mst_resp_i(narrow_in_7_rsp)
  );
  axi_a48_d64_i4_u0_req_t  narrow_out_7_req;
  axi_a48_d64_i4_u0_resp_t narrow_out_7_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_narrow_out_cut_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(narrow_out_7_req),
      .slv_resp_o(narrow_out_7_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_S1_QUADRANT_7]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_S1_QUADRANT_7])
  );
  axi_a48_d512_i8_u0_req_t  wide_in_7_req;
  axi_a48_d512_i8_u0_resp_t wide_in_7_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_wide_in_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_inter_xbar_out_req[QUADRANT_INTER_XBAR_OUT_QUADRANT_7]),
      .slv_resp_o(quadrant_inter_xbar_out_rsp[QUADRANT_INTER_XBAR_OUT_QUADRANT_7]),
      .mst_req_o(wide_in_7_req),
      .mst_resp_i(wide_in_7_rsp)
  );
  axi_a48_d512_i4_u0_req_t  wide_out_7_req;
  axi_a48_d512_i4_u0_resp_t wide_out_7_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_wide_out_cut_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_out_7_req),
      .slv_resp_o(wide_out_7_rsp),
      .mst_req_o(quadrant_pre_xbar_7_in_req[QUADRANT_PRE_XBAR_7_IN_QUADRANT]),
      .mst_resp_i(quadrant_pre_xbar_7_in_rsp[QUADRANT_PRE_XBAR_7_IN_QUADRANT])
  );
  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_inter_cut_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_7_out_req[QUADRANT_PRE_XBAR_7_OUT_QUADRANT_INTER_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_7_out_rsp[QUADRANT_PRE_XBAR_7_OUT_QUADRANT_INTER_XBAR]),
      .mst_req_o(quadrant_inter_xbar_in_req[QUADRANT_INTER_XBAR_IN_QUADRANT_7]),
      .mst_resp_i(quadrant_inter_xbar_in_rsp[QUADRANT_INTER_XBAR_IN_QUADRANT_7])
  );
  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_pre_to_hbm_cut_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(quadrant_pre_xbar_7_out_req[QUADRANT_PRE_XBAR_7_OUT_HBM_XBAR]),
      .slv_resp_o(quadrant_pre_xbar_7_out_rsp[QUADRANT_PRE_XBAR_7_OUT_HBM_XBAR]),
      .mst_req_o(hbm_xbar_in_req[HBM_XBAR_IN_QUADRANT_7]),
      .mst_resp_i(hbm_xbar_in_rsp[HBM_XBAR_IN_QUADRANT_7])
  );

  occamy_quadrant_s1 i_occamy_quadrant_s1_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .test_mode_i(test_mode_i),
      .tile_id_i(6'd7),
      .debug_req_i('0),
      .meip_i('0),
      .mtip_i(mtip_i[288:253]),
      .msip_i(msip_i[288:253]),
      .quadrant_narrow_out_req_o(narrow_out_7_req),
      .quadrant_narrow_out_rsp_i(narrow_out_7_rsp),
      .quadrant_narrow_in_req_i(narrow_in_7_req),
      .quadrant_narrow_in_rsp_o(narrow_in_7_rsp),
      .quadrant_wide_out_req_o(wide_out_7_req),
      .quadrant_wide_out_rsp_i(wide_out_7_rsp),
      .quadrant_wide_in_req_i(wide_in_7_req),
      .quadrant_wide_in_rsp_o(wide_in_7_rsp),
      .sram_cfg_i(sram_cfgs_i.quadrant)
  );


  //////////
  // SPM //
  //////////
  axi_a48_d64_i8_u0_req_t  spm_amo_adapter_req;
  axi_a48_d64_i8_u0_resp_t spm_amo_adapter_rsp;

  axi_riscv_atomics #(
      .AXI_ADDR_WIDTH(48),
      .AXI_DATA_WIDTH(64),
      .AXI_ID_WIDTH(8),
      .AXI_USER_WIDTH(1),
      .AXI_MAX_WRITE_TXNS(16),
      .RISCV_WORD_WIDTH(64)
  ) i_spm_amo_adapter (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_aw_addr_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.addr),
      .slv_aw_prot_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.prot),
      .slv_aw_region_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.region),
      .slv_aw_atop_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.atop),
      .slv_aw_len_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.len),
      .slv_aw_size_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.size),
      .slv_aw_burst_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.burst),
      .slv_aw_lock_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.lock),
      .slv_aw_cache_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.cache),
      .slv_aw_qos_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.qos),
      .slv_aw_id_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.id),
      .slv_aw_user_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw.user),
      .slv_aw_ready_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].aw_ready),
      .slv_aw_valid_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].aw_valid),
      .slv_ar_addr_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.addr),
      .slv_ar_prot_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.prot),
      .slv_ar_region_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.region),
      .slv_ar_len_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.len),
      .slv_ar_size_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.size),
      .slv_ar_burst_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.burst),
      .slv_ar_lock_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.lock),
      .slv_ar_cache_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.cache),
      .slv_ar_qos_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.qos),
      .slv_ar_id_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.id),
      .slv_ar_user_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar.user),
      .slv_ar_ready_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].ar_ready),
      .slv_ar_valid_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].ar_valid),
      .slv_w_data_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].w.data),
      .slv_w_strb_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].w.strb),
      .slv_w_user_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].w.user),
      .slv_w_last_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].w.last),
      .slv_w_ready_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].w_ready),
      .slv_w_valid_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].w_valid),
      .slv_r_data_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].r.data),
      .slv_r_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].r.resp),
      .slv_r_last_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].r.last),
      .slv_r_id_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].r.id),
      .slv_r_user_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].r.user),
      .slv_r_ready_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].r_ready),
      .slv_r_valid_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].r_valid),
      .slv_b_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].b.resp),
      .slv_b_id_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].b.id),
      .slv_b_user_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].b.user),
      .slv_b_ready_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_SPM].b_ready),
      .slv_b_valid_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_SPM].b_valid),

      .mst_aw_addr_o(spm_amo_adapter_req.aw.addr),
      .mst_aw_prot_o(spm_amo_adapter_req.aw.prot),
      .mst_aw_region_o(spm_amo_adapter_req.aw.region),
      .mst_aw_atop_o(spm_amo_adapter_req.aw.atop),
      .mst_aw_len_o(spm_amo_adapter_req.aw.len),
      .mst_aw_size_o(spm_amo_adapter_req.aw.size),
      .mst_aw_burst_o(spm_amo_adapter_req.aw.burst),
      .mst_aw_lock_o(spm_amo_adapter_req.aw.lock),
      .mst_aw_cache_o(spm_amo_adapter_req.aw.cache),
      .mst_aw_qos_o(spm_amo_adapter_req.aw.qos),
      .mst_aw_id_o(spm_amo_adapter_req.aw.id),
      .mst_aw_user_o(spm_amo_adapter_req.aw.user),
      .mst_aw_ready_i(spm_amo_adapter_rsp.aw_ready),
      .mst_aw_valid_o(spm_amo_adapter_req.aw_valid),
      .mst_ar_addr_o(spm_amo_adapter_req.ar.addr),
      .mst_ar_prot_o(spm_amo_adapter_req.ar.prot),
      .mst_ar_region_o(spm_amo_adapter_req.ar.region),
      .mst_ar_len_o(spm_amo_adapter_req.ar.len),
      .mst_ar_size_o(spm_amo_adapter_req.ar.size),
      .mst_ar_burst_o(spm_amo_adapter_req.ar.burst),
      .mst_ar_lock_o(spm_amo_adapter_req.ar.lock),
      .mst_ar_cache_o(spm_amo_adapter_req.ar.cache),
      .mst_ar_qos_o(spm_amo_adapter_req.ar.qos),
      .mst_ar_id_o(spm_amo_adapter_req.ar.id),
      .mst_ar_user_o(spm_amo_adapter_req.ar.user),
      .mst_ar_ready_i(spm_amo_adapter_rsp.ar_ready),
      .mst_ar_valid_o(spm_amo_adapter_req.ar_valid),
      .mst_w_data_o(spm_amo_adapter_req.w.data),
      .mst_w_strb_o(spm_amo_adapter_req.w.strb),
      .mst_w_user_o(spm_amo_adapter_req.w.user),
      .mst_w_last_o(spm_amo_adapter_req.w.last),
      .mst_w_ready_i(spm_amo_adapter_rsp.w_ready),
      .mst_w_valid_o(spm_amo_adapter_req.w_valid),
      .mst_r_data_i(spm_amo_adapter_rsp.r.data),
      .mst_r_resp_i(spm_amo_adapter_rsp.r.resp),
      .mst_r_last_i(spm_amo_adapter_rsp.r.last),
      .mst_r_id_i(spm_amo_adapter_rsp.r.id),
      .mst_r_user_i(spm_amo_adapter_rsp.r.user),
      .mst_r_ready_o(spm_amo_adapter_req.r_ready),
      .mst_r_valid_i(spm_amo_adapter_rsp.r_valid),
      .mst_b_resp_i(spm_amo_adapter_rsp.b.resp),
      .mst_b_id_i(spm_amo_adapter_rsp.b.id),
      .mst_b_user_i(spm_amo_adapter_rsp.b.user),
      .mst_b_ready_o(spm_amo_adapter_req.b_ready),
      .mst_b_valid_i(spm_amo_adapter_rsp.b_valid)
  );

  axi_a48_d64_i8_u0_req_t  spm_amo_adapter_cut_req;
  axi_a48_d64_i8_u0_resp_t spm_amo_adapter_cut_rsp;

  axi_multicut #(
      .NoCuts(1),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_spm_amo_adapter_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(spm_amo_adapter_req),
      .slv_resp_o(spm_amo_adapter_rsp),
      .mst_req_o(spm_amo_adapter_cut_req),
      .mst_resp_i(spm_amo_adapter_cut_rsp)
  );


  typedef logic [16:0] mem_addr_t;
  typedef logic [63:0] mem_data_t;
  typedef logic [7:0] mem_strb_t;

  logic spm_req, spm_gnt, spm_we, spm_rvalid;
  mem_addr_t spm_addr;
  mem_data_t spm_wdata, spm_rdata;
  mem_strb_t spm_strb;

  axi_to_mem #(
      .axi_req_t(axi_a48_d64_i8_u0_req_t),
      .axi_resp_t(axi_a48_d64_i8_u0_resp_t),
      .AddrWidth(17),
      .DataWidth(64),
      .IdWidth(8),
      .NumBanks(1),
      .BufDepth(1)
  ) i_axi_to_mem (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .busy_o(),
      .axi_req_i(spm_amo_adapter_cut_req),
      .axi_resp_o(spm_amo_adapter_cut_rsp),
      .mem_req_o(spm_req),
      .mem_gnt_i(spm_gnt),
      .mem_addr_o(spm_addr),
      .mem_wdata_o(spm_wdata),
      .mem_strb_o(spm_strb),
      .mem_atop_o(),
      .mem_we_o(spm_we),
      .mem_rvalid_i(spm_rvalid),
      .mem_rdata_i(spm_rdata)
  );

  spm_1p_adv #(
      .NumWords(16384),
      .DataWidth(64),
      .ByteWidth(8),
      .EnableInputPipeline(1'b1),
      .EnableOutputPipeline(1'b1),
      .sram_cfg_t(sram_cfg_t)
  ) i_spm_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .valid_i(spm_req),
      .ready_o(spm_gnt),
      .we_i(spm_we),
      .addr_i(spm_addr[16:3]),
      .wdata_i(spm_wdata),
      .be_i(spm_strb),
      .rdata_o(spm_rdata),
      .rvalid_o(spm_rvalid),
      .rerror_o(spm_rerror_o),
      .sram_cfg_i(sram_cfgs_i.spm)
  );

  ///////////
  // HBM2e //
  ///////////
  axi_a48_d512_i8_u0_req_t  hbm_out_soc_0_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_0_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_0 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_0]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_0]),
      .mst_req_o(hbm_out_soc_0_req),
      .mst_resp_i(hbm_out_soc_0_rsp)
  );

  assign hbm_0_req_o = hbm_out_soc_0_req;
  assign hbm_out_soc_0_rsp = hbm_0_rsp_i;

  axi_a48_d512_i8_u0_req_t  hbm_out_soc_1_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_1_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_1 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_1]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_1]),
      .mst_req_o(hbm_out_soc_1_req),
      .mst_resp_i(hbm_out_soc_1_rsp)
  );

  assign hbm_1_req_o = hbm_out_soc_1_req;
  assign hbm_out_soc_1_rsp = hbm_1_rsp_i;

  axi_a48_d512_i8_u0_req_t  hbm_out_soc_2_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_2_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_2 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_2]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_2]),
      .mst_req_o(hbm_out_soc_2_req),
      .mst_resp_i(hbm_out_soc_2_rsp)
  );

  assign hbm_2_req_o = hbm_out_soc_2_req;
  assign hbm_out_soc_2_rsp = hbm_2_rsp_i;

  axi_a48_d512_i8_u0_req_t  hbm_out_soc_3_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_3_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_3 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_3]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_3]),
      .mst_req_o(hbm_out_soc_3_req),
      .mst_resp_i(hbm_out_soc_3_rsp)
  );

  assign hbm_3_req_o = hbm_out_soc_3_req;
  assign hbm_out_soc_3_rsp = hbm_3_rsp_i;

  axi_a48_d512_i8_u0_req_t  hbm_out_soc_4_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_4_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_4 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_4]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_4]),
      .mst_req_o(hbm_out_soc_4_req),
      .mst_resp_i(hbm_out_soc_4_rsp)
  );

  assign hbm_4_req_o = hbm_out_soc_4_req;
  assign hbm_out_soc_4_rsp = hbm_4_rsp_i;

  axi_a48_d512_i8_u0_req_t  hbm_out_soc_5_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_5_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_5 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_5]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_5]),
      .mst_req_o(hbm_out_soc_5_req),
      .mst_resp_i(hbm_out_soc_5_rsp)
  );

  assign hbm_5_req_o = hbm_out_soc_5_req;
  assign hbm_out_soc_5_rsp = hbm_5_rsp_i;

  axi_a48_d512_i8_u0_req_t  hbm_out_soc_6_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_6_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_6 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_6]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_6]),
      .mst_req_o(hbm_out_soc_6_req),
      .mst_resp_i(hbm_out_soc_6_rsp)
  );

  assign hbm_6_req_o = hbm_out_soc_6_req;
  assign hbm_out_soc_6_rsp = hbm_6_rsp_i;

  axi_a48_d512_i8_u0_req_t  hbm_out_soc_7_req;
  axi_a48_d512_i8_u0_resp_t hbm_out_soc_7_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i8_u0_r_chan_t),
      .req_t(axi_a48_d512_i8_u0_req_t),
      .resp_t(axi_a48_d512_i8_u0_resp_t)
  ) i_hbm_out_soc_7 (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbm_xbar_out_req[HBM_XBAR_OUT_HBM_7]),
      .slv_resp_o(hbm_xbar_out_rsp[HBM_XBAR_OUT_HBM_7]),
      .mst_req_o(hbm_out_soc_7_req),
      .mst_resp_i(hbm_out_soc_7_rsp)
  );

  assign hbm_7_req_o = hbm_out_soc_7_req;
  assign hbm_out_soc_7_rsp = hbm_7_rsp_i;


  /////////
  // HBI //
  /////////

  axi_a48_d512_i4_u0_req_t  hbi_in_wide_soc_req;
  axi_a48_d512_i4_u0_resp_t hbi_in_wide_soc_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i4_u0_r_chan_t),
      .req_t(axi_a48_d512_i4_u0_req_t),
      .resp_t(axi_a48_d512_i4_u0_resp_t)
  ) i_hbi_to_wide_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbi_in_wide_soc_req),
      .slv_resp_o(hbi_in_wide_soc_rsp),
      .mst_req_o(soc_wide_xbar_in_req[SOC_WIDE_XBAR_IN_HBI]),
      .mst_resp_i(soc_wide_xbar_in_rsp[SOC_WIDE_XBAR_IN_HBI])
  );
  axi_a48_d512_i6_u0_req_t  wide_to_hbi_trunc_req;
  axi_a48_d512_i6_u0_resp_t wide_to_hbi_trunc_rsp;

  axi_modify_address #(
      .slv_req_t (axi_a48_d512_i6_u0_req_t),
      .mst_addr_t(logic [47:0]),
      .mst_req_t (axi_a48_d512_i6_u0_req_t),
      .axi_resp_t(axi_a48_d512_i6_u0_resp_t)
  ) i_wide_to_hbi_trunc (
      .slv_req_i(soc_wide_xbar_out_req[SOC_WIDE_XBAR_OUT_HBI]),
      .slv_resp_o(soc_wide_xbar_out_rsp[SOC_WIDE_XBAR_OUT_HBI]),
      .mst_aw_addr_i({8'b0, soc_wide_xbar_out_req[SOC_WIDE_XBAR_OUT_HBI].aw.addr[39:0]}),
      .mst_ar_addr_i({8'b0, soc_wide_xbar_out_req[SOC_WIDE_XBAR_OUT_HBI].ar.addr[39:0]}),
      .mst_req_o(wide_to_hbi_trunc_req),
      .mst_resp_i(wide_to_hbi_trunc_rsp)
  );

  axi_a48_d512_i6_u0_req_t  wide_to_hbi_cut_req;
  axi_a48_d512_i6_u0_resp_t wide_to_hbi_cut_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d512_i6_u0_aw_chan_t),
      .w_chan_t(axi_a48_d512_i6_u0_w_chan_t),
      .b_chan_t(axi_a48_d512_i6_u0_b_chan_t),
      .ar_chan_t(axi_a48_d512_i6_u0_ar_chan_t),
      .r_chan_t(axi_a48_d512_i6_u0_r_chan_t),
      .req_t(axi_a48_d512_i6_u0_req_t),
      .resp_t(axi_a48_d512_i6_u0_resp_t)
  ) i_wide_to_hbi_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(wide_to_hbi_trunc_req),
      .slv_resp_o(wide_to_hbi_trunc_rsp),
      .mst_req_o(wide_to_hbi_cut_req),
      .mst_resp_i(wide_to_hbi_cut_rsp)
  );
  axi_a48_d64_i4_u0_req_t  hbi_in_narrow_soc_req;
  axi_a48_d64_i4_u0_resp_t hbi_in_narrow_soc_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_hbi_to_narrow_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(hbi_in_narrow_soc_req),
      .slv_resp_o(hbi_in_narrow_soc_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_HBI]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_HBI])
  );
  axi_a48_d64_i8_u0_req_t  narrow_to_hbi_cut_req;
  axi_a48_d64_i8_u0_resp_t narrow_to_hbi_cut_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_narrow_to_hbi_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_HBI]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_HBI]),
      .mst_req_o(narrow_to_hbi_cut_req),
      .mst_resp_i(narrow_to_hbi_cut_rsp)
  );

  assign hbi_wide_req_o = wide_to_hbi_cut_req;
  assign wide_to_hbi_cut_rsp = hbi_wide_rsp_i;
  assign hbi_in_wide_soc_req = hbi_wide_req_i;
  assign hbi_wide_rsp_o = hbi_in_wide_soc_rsp;

  assign hbi_narrow_req_o = narrow_to_hbi_cut_req;
  assign narrow_to_hbi_cut_rsp = hbi_narrow_rsp_i;
  assign hbi_in_narrow_soc_req = hbi_narrow_req_i;
  assign hbi_narrow_rsp_o = hbi_in_narrow_soc_rsp;


  /////////////////
  // Peripherals //
  /////////////////
  axi_a48_d64_i8_u0_req_t  periph_regbus_out_req;
  axi_a48_d64_i8_u0_resp_t periph_regbus_out_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_periph_regbus_out_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_REGBUS_PERIPH]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_REGBUS_PERIPH]),
      .mst_req_o(periph_regbus_out_req),
      .mst_resp_i(periph_regbus_out_rsp)
  );
  axi_a48_d64_i8_u0_req_t  periph_axi_lite_out_req;
  axi_a48_d64_i8_u0_resp_t periph_axi_lite_out_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i8_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i8_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i8_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i8_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i8_u0_r_chan_t),
      .req_t(axi_a48_d64_i8_u0_req_t),
      .resp_t(axi_a48_d64_i8_u0_resp_t)
  ) i_periph_axi_lite_out_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(soc_narrow_xbar_out_req[SOC_NARROW_XBAR_OUT_PERIPH]),
      .slv_resp_o(soc_narrow_xbar_out_rsp[SOC_NARROW_XBAR_OUT_PERIPH]),
      .mst_req_o(periph_axi_lite_out_req),
      .mst_resp_i(periph_axi_lite_out_rsp)
  );
  axi_a48_d64_i4_u0_req_t  periph_axi_lite_in_req;
  axi_a48_d64_i4_u0_resp_t periph_axi_lite_in_rsp;

  axi_multicut #(
      .NoCuts(3),
      .aw_chan_t(axi_a48_d64_i4_u0_aw_chan_t),
      .w_chan_t(axi_a48_d64_i4_u0_w_chan_t),
      .b_chan_t(axi_a48_d64_i4_u0_b_chan_t),
      .ar_chan_t(axi_a48_d64_i4_u0_ar_chan_t),
      .r_chan_t(axi_a48_d64_i4_u0_r_chan_t),
      .req_t(axi_a48_d64_i4_u0_req_t),
      .resp_t(axi_a48_d64_i4_u0_resp_t)
  ) i_periph_axi_lite_in_cut (
      .clk_i(clk_i),
      .rst_ni(rst_ni),
      .slv_req_i(periph_axi_lite_in_req),
      .slv_resp_o(periph_axi_lite_in_rsp),
      .mst_req_o(soc_narrow_xbar_in_req[SOC_NARROW_XBAR_IN_PERIPH]),
      .mst_resp_i(soc_narrow_xbar_in_rsp[SOC_NARROW_XBAR_IN_PERIPH])
  );

  // Inputs
  assign periph_axi_lite_in_req = periph_axi_lite_req_i;
  assign periph_axi_lite_rsp_o = periph_axi_lite_in_rsp;

  // Outputs
  assign periph_axi_lite_req_o = periph_axi_lite_out_req;
  assign periph_axi_lite_out_rsp = periph_axi_lite_rsp_i;
  assign periph_regbus_req_o = periph_regbus_out_req;
  assign periph_regbus_out_rsp = periph_regbus_rsp_i;

endmodule
