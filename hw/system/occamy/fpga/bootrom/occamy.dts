// Copyright 2021 ETH Zurich and University of Bologna.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0


// TODO(niwis) auto generate
/dts-v1/;
/ {
  #address-cells = <2>;
  #size-cells = <2>;
  compatible = "eth,occamy-dev";
  model = "eth,occamy";
  config {
    u-boot,spl-payload-offset = <0x6000000>;
  };
  chosen {
    stdout-path = "/soc/serial@2002000:115200";
  };
  memory@80000000 {
    device_type = "memory";
    reg = <0x0 0x80000000 0x0 0x80000000>;
  };
  // Create a reserved memory region for Snitch program memory
  reserved-memory {
    #address-cells = <2>;
    #size-cells = <2>;
    ranges;
    snitch_mem: buffer@c0000000 {
        reg = <0x0 0xc0000000 0x0 0x10000000>;
    };
  };
  cpus {
    #address-cells = <1>;
    #size-cells = <0>;
    timebase-frequency = <12500000>;
    CPU0: cpu@0 {
      device_type = "cpu";
      status = "okay";
      compatible = "eth,ariane", "riscv";
      clock-frequency = <25000000>;
      riscv,isa = "rv64fimafd";
      mmu-type = "riscv,sv39";
      tlb-split;
      reg = <0>;
      // represents the destination of the mcause bits
      // ariane has 3 interrupt inputs:
      // - software (ipi_i[0], IRQ_M_SOFT)
      // - timer (time_irq_i[0], IRQ_M_TIMER)
      // - external (irq_i[1:0], {IRQ_S_EXT, IRQ_M_EXT})
      CPU0_intc: interrupt-controller {
        #interrupt-cells = <1>;
        #address-cells = <1>;
        interrupt-controller;
        compatible = "riscv,cpu-intc";
      };
    };
  };
  sysclk: virt_25mhz {
    #clock-cells = <0>;
    compatible = "fixed-clock";
    clock-frequency = <25000000>;
  };
  soc: soc {
    #address-cells = <2>;
    #size-cells = <2>;
    compatible = "simple-bus";
    ranges;
    debug@0 {
      compatible = "riscv,debug-013";
      // interrupts-extended = <&CPU0_intc 65535>;
      reg-names = "control";
      reg = <0x0 0x0 0x0 0x1000>;
    };
    serial@2002000 {
      compatible = "ns16550a";
      reg = <0x0 0x2002000 0x0 0x1000>;
      clock-frequency = <25000000>;
      current-speed = <115200>;
      interrupt-parent = <&PLIC0>;
      interrupts = <36>;
      reg-offset = <0>;
      reg-shift = <2>; // regs are spaced on 32 bit boundary
      reg-io-width = <4>; // only 32-bit access are supported
      // fifo-size = <64>;
    };
    timer@2006000 {
      compatible = "pulp,apb_timer";
      interrupt-parent = <&PLIC0>;
      interrupts = <0x00000068 0x00000069 0x00000070 0x00000071>;
      reg = <0x00000000 0x2006000 0x00000000 0x00001000>;
      reg-names = "control";
    };
    axi_quad_spi_1: spi@4c000000 {
      compatible = "xlnx,axi-quad-spi-3.2", "xlnx,xps-spi-2.00.a";
      interrupts-extended = <&PLIC0 2>;
      clocks = <&sysclk>;
      reg = <0x0 0x4c000000 0x0 0x10000>;
      xlnx,num-ss-bits = <1>;
      xlnx,num-transfer-bits = <0x8>;
      fifo-size = <16>;
      #address-cells = <1>;
      #size-cells = <0>;
      nor@0 {
        #address-cells = <0x1>;
        #size-cells = <0x1>;
        compatible = "micron,mt25qu02g";
        reg = <0x0 0x0>;
        spi-max-frequency = <25000000>;
        spi-rx-bus-width = <0x4>;
        spi-tx-bus-width = <0x4>;
        m25p,fast-read;
        partition@0 {
          label = "bitstream";
          reg = <0x0 0x6000000>; // 96 MB
          read-only;
        };
        partition@6000000 {
          label = "u-boot";
          reg = <0x6000000 0x100000>; // 1 MB
          read-only;
        };
        uimage@6100000 {
          label = "uimage";
          reg = <0x6100000 0x1000000>; // 16 MB
          read-only;
        };
        partition@7100000 {
          label = "filesystem";
          reg = <0x7100000 0x8f00000>; // 143 MB
        };
      };
    };
    clint0: clint@4000000 {
      clock-frequency = <12500000>;
      compatible = "riscv,clint0";
      // clint generates software and timer interrupts to the core. Attach them
      // to the CPU
      // bits in mip and exception code in mcause:
      // - IRQ_M_SOFT = 3: Machine software interrupt
      // - IRQ_M_TIMER = 7: Machine timer interrupt
      interrupts-extended = <&CPU0_intc 3 &CPU0_intc 7>;
      reg-names = "clint";
      reg = <0x0 0x4000000 0x0 0x100000>;
    };
    PLIC0: interrupt-controller@c000000 {
      compatible = "riscv,plic0";
      #address-cells = <0>;
      #interrupt-cells = <1>;
      interrupt-controller;
      // PLIC generates external interrupts to the core, M and S mode
      // - IRQ_M_EXT = 11: Machine external interrupt
      // - IRQ_S_EXT = 9:  Supervisor external interrupt
      interrupts-extended = <&CPU0_intc 11 &CPU0_intc 9>;
      riscv,max-priority = <6>;
      riscv,ndev = <72>;
      reg = <0x0 0xc000000 0x0 0x4000000>;
    };
    eth_dma0: eth_dma@4d000000 {
      #dma-cells = <1>;
      #address-cells = <1>;
      #size-cells = <1>;
      compatible = "xlnx,axi-dma-1.00.a";
      reg = <0x0 0x4d000000 0x0 0x10000>;
      interrupts-extended = <&PLIC0 3 &PLIC0 4>;
      xlnx,addrwidth = <0x40>;
      xlnx,include-sg;
      dma-channel@4d000000 {
        compatible = "xlnx,axi-dma-mm2s-channel";
        reg = <0 0>;
        dma-channels = <0x1>;
        interrupts-extended = <&PLIC0 3>;
        xlnx,datawidth = <0x20>;
        xlnx,device-id = <0x0>;
        xlnx,include-dre ;
      };
      dma-channel@4d000030 {
        compatible = "xlnx,axi-dma-s2mm-channel";
        reg = <0 0>;
        dma-channels = <0x1>;
        interrupts-extended = <&PLIC0 4>;
        xlnx,datawidth = <0x20>;
        xlnx,device-id = <0x0>;
        xlnx,include-dre ;
      };
    };
    eth0: eth0@4c400000 {
      compatible = "xlnx,axi-ethernet-1.00.a";
      reg = <0x0 0x4c400000 0x0 0x40000>;
      // attacked to system clock, provide name for matching
      clocks = <&sysclk>, <&sysclk>;
      clock-names = "s_axi_lite_clk", "axis_clk";
      // interrupt and mac_irq
      interrupts-extended = <&PLIC0 1 &PLIC0 6>;
      // local-mac-address = [ 00 0A 35 04 E1 60 ]; // hero-vcu128-01
      local-mac-address = [ 00 0A 35 04 E1 52 ]; // hero-vcu128-02
      mac-address = [ 00 0A 35 04 E1 52 ];
      device_type = "network";
      axistream-connected = <&eth_dma0>;
      axistream-control-connected = <&eth_dma0>;
      phy-handle = <&dp83867_0>;
      // xlnx,phy-type = <0x4>; // XAE_PHY_TYPE_SGMII. linux: deprecated, use phy-mode
      phy-mode = "sgmii";
      xlnx,phyaddr = <0x0>;
      xlnx,rxcsum = <0x2>; // 0, 1, 2 for no/partial/full offloading
      xlnx,rxmem = <0x1000>;
      xlnx,txcsum = <0x2>; // 0, 1, 2 for no/partial/full offloading
      xlnx,txmem = <0x1000>;

      mdio: mdio {
        #address-cells = <1>;
        #size-cells = <0>;
        // reset-gpios = <&tca6416a 6 GPIO_ACTIVE_LOW>;
        // reset-delay-us = <2>;
        // PCS/PMA PHY
        xilinx_phy: ethernet-phy@0 {
          #phy-cells = <1>;
          device_type = "ethernet-phy";
          reg = <0>;
        };
        // External PHY
        dp83867_0: ethernet-phy@3 {
          compatible = "ethernet-phy-ieee802.3-c22";
          reg = <3>;
          #phy-cells = <1>;
          device_type = "ethernet-phy";
          ti,sgmii-ref-clock-output-enable;
          ti,dp83867-rxctrl-strap-quirk;
        };
      };
    };
    soc_ctl0: soc-control@2000000 {
      compatible = "eth,occamy-soc-control";
      reg-names = "soc-control";
      reg = <0x0 0x02000000 0x0 0x1000>;
    };
    quadrant_ctrl0: quadrant-control@b000000 {
      compatible = "eth,occamy-quadrant-control";
      reg-names = "quadrant-control";
      reg = <0x0 0x0b000000 0x0 0x10000>;
    };
    // Instantiate a snitch cluster
    snitch-cluster@10000000 {
      compatible = "eth,snitch-cluster";
      // TCDM and Peripheral spaces
      reg-names = "tcdm", "peripheral";
      reg = <0x0 0x10000000 0x0 0x20000>, <0x0 0x10020000 0x0 0x20000>;
      // points to a memory region reserved for use by the cluster
      memory-region = <&snitch_mem>;
      // cluster specific properties
      eth,compute-cores = <8>;
      eth,dm-cores = <1>;
      eth,quadrant-idx = <0>;
      eth,cluster-idx = <0>; // Used to calculate offsets in clint, soc-ctrl etc..
      // A handle to the soc-control register where isolates etc are located
      eth,soc-ctl = <&soc_ctl0>;
      // Handle to the associated quadrant controller
      eth,quadrant-ctrl = <&quadrant_ctrl0>;
      // handle to the clint where IPI interrupts are attached
      eth,clint = <&clint0>;
    };
  };
};
